{"version":3,"file":"static/js/731.8ecc7bc8.chunk.js","mappings":"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","sources":["Components/Header/dropdown.jsx","Components/Header/desktopdropdown.jsx","Components/Header/index.jsx"],"sourcesContent":["import React, { FC } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerCloseButton,\r\n  DrawerContent,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  // Heading,\r\n  HStack,\r\n  // LinkProps,\r\n  Stack,\r\n  useDisclosure,\r\n} from '@chakra-ui/react';\r\nimport { AiOutlineMenu } from 'react-icons/ai';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport './index.css';\r\n\r\nimport Dropdown from 'react-dropdown-animated';\r\n// import Appstore from '../../Store/Appstore';\r\nimport { observer } from 'mobx-react';\r\nimport Appstore from '../../Store/Appstore';\r\nimport { useState } from 'react';\r\nimport { useQuery } from 'react-query';\r\nimport axios from 'axios';\r\n\r\nconst Navigation = observer(({ onClose }) => {\r\n  // const [showDD, setShowDD] = useState(true);\r\n  const navigate = useNavigate();\r\n  const toggleDD = () => onClose();\r\n  let options = [\r\n    {\r\n      content: 'Loading Categories Please wait',\r\n      onClick: event => {\r\n        toggleDD();\r\n        // location(`/`);\r\n      },\r\n    },\r\n  ];\r\n  let options2 = [];\r\n  const url = `${Appstore.apilink}/returncategories`;\r\n  const { data, refetch, isLoading } = useQuery(['getCategories'], async () => {\r\n    return axios.get(url).then(response => {\r\n      return response.data.data;\r\n    });\r\n  });\r\n\r\n  if (!data) {\r\n    let timer;\r\n    clearTimeout(timer);\r\n    timer = setTimeout(() => {\r\n      refetch();\r\n    }, 4000);\r\n  }\r\n\r\n  if (!isLoading && data) {\r\n    data.map(e => {\r\n      options2.push({\r\n        content: e.catname,\r\n        onClick: async( event) => {\r\n          await toggleDD();\r\n          console.log(e, 'toggle dd closed');\r\n          return navigate(`/products/${e.catid}/${e.catname}`);\r\n        },\r\n      });\r\n      return false\r\n    });\r\n  }\r\n  return (\r\n    <Stack as=\"nav\">\r\n      <Link to=\"/\" onClick={() => onClose()}>\r\n        Home\r\n      </Link>\r\n\r\n      <Dropdown\r\n        options={data ? options2 : options}\r\n        initial={200}\r\n        exit={4}\r\n        value=\"Products\"\r\n      />\r\n      <Link\r\n        to=\"/about-us\"\r\n        onClick={() => {\r\n          // Appstore.setLogin(true);\r\n          onClose();\r\n        }}\r\n      >\r\n        About\r\n      </Link>\r\n      \r\n     \r\n      <Link\r\n        to=\"/participation\"\r\n        onClick={() => {\r\n          // Appstore.setLogin(true);\r\n          onClose();\r\n        }}\r\n      >\r\n        Our Participation\r\n      </Link>\r\n\r\n      <Link\r\n        to=\"/contact\"\r\n        onClick={() => {\r\n          // Appstore.setLogin(true);\r\n          onClose();\r\n        }}\r\n      >\r\n        Contact us\r\n      </Link>\r\n    </Stack>\r\n  );\r\n});\r\n\r\nconst DrawerMenu = () => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const btnRef = React.useRef();\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        ref={btnRef}\r\n        backgroundColor=\"unset\"\r\n        fontSize=\"28px\"\r\n        padding=\"5px\"\r\n        onClick={onOpen}\r\n      >\r\n        <AiOutlineMenu />\r\n      </Button>\r\n      <Drawer\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n        placement=\"top\"\r\n        finalFocusRef={btnRef}\r\n      >\r\n        <DrawerOverlay className=\"headerModal\">\r\n          <DrawerContent className=\"mainHeaderDrawer\">\r\n            <DrawerCloseButton />\r\n            <DrawerHeader>Menu</DrawerHeader>\r\n            <DrawerBody>\r\n              <Navigation className=\"dropdownNav\" onClose={onClose} />\r\n            </DrawerBody>\r\n          </DrawerContent>\r\n        </DrawerOverlay>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nconst LayoutWithMenu = ({ children }) => {\r\n  return (\r\n    <Stack>\r\n      <HStack>\r\n        <Box>\r\n          <DrawerMenu />\r\n        </Box>\r\n      </HStack>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst DropdownMobile = () => {\r\n  return <LayoutWithMenu></LayoutWithMenu>;\r\n};\r\n\r\nDropdownMobile.containerSize = 'fill';\r\n\r\nexport default React.memo(DropdownMobile);\r\n","import { Box, Button, Select, Stack } from '@chakra-ui/react';\r\nimport { observer } from 'mobx-react';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport Appstore from '../../Store/Appstore';\r\n// import Dropdown from 'react-dropdown';\r\nimport Dropdown from 'react-dropdown-animated';\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\n\r\nconst Desktopdropdown = observer(() => {\r\n  //   const options = ['Products', 'Loudspeaker', 'Microphone','Crossover Networks Active Crossover', 'Mixer', 'Amplifier'\r\n  // ,'P.A. Amplifier', 'Wallmount Loudspeaker', 'Loudspeaker System','Compression Drivers'];\r\n  const [showDD, setShowDD] = useState(true);\r\n  const navigate = useNavigate();\r\n  const toggleDD = () => setShowDD(false);\r\n  let options = [\r\n    {\r\n      content: 'Loading Categories Please wait',\r\n      onClick: event => {\r\n        toggleDD();\r\n        // location(`/`);\r\n      },\r\n    }\r\n  ];\r\n  \r\n  let options2=[]\r\n  const url = `${Appstore.apilink}/returncategories`\r\n  const { data, refetch, isLoading } = useQuery(\r\n    ['getCategories'],\r\n    async () => {\r\n      return axios\r\n        .get(url)\r\n        .then(\r\n          response => {\r\n            return response.data.data\r\n          },\r\n   \r\n        )\r\n    }\r\n  )\r\n\r\n  if (!data) {\r\n    let timer;\r\n    clearTimeout(timer);\r\n    timer = setTimeout(() => {\r\n      refetch();\r\n    }, 4000);\r\n  }\r\n\r\n  if(!isLoading && data){\r\ndata.map((e)=>{\r\noptions2.push({content:e.catname,\r\n  onClick: event => {\r\n    toggleDD();\r\n    navigate(`/products/${e.catid}/${e.catname}`);\r\n  },})\r\n  console.log(e,\"data for categories\")\r\n})\r\n\r\nconsole.log(options2,\"data for categories\")\r\n  }\r\n  useEffect(()=>{\r\n    if(!showDD)\r\n    setShowDD(true)\r\n  },[showDD])\r\n  return (\r\n    <Stack\r\n      direction=\"row\"\r\n      m=\"10px 10px\"\r\n      gap={2}\r\n      justifyContent=\"space-around\"\r\n      align=\"center\"\r\n    >\r\n      <Link to=\"/\">\r\n        <Button\r\n          variant=\"ghost\"\r\n          onClick={() => {\r\n            // Appstore.setLogin(true);\r\n          }}\r\n        >\r\n          Home\r\n        </Button>\r\n      </Link>\r\n      <Link to=\"/about-us\">\r\n        <Button\r\n          variant=\"ghost\"\r\n          onClick={() => {\r\n            // Appstore.setReg(true);\r\n          }}\r\n        >\r\n          About\r\n        </Button>\r\n      </Link>\r\n   \r\n      {showDD ? (\r\n       <Dropdown options={data?options2:options} initial={200} exit={4} value=\"Products\" />\r\n        ) : (\r\n          ''\r\n      )}\r\n    \r\n\r\n      <Link to=\"/participation\">\r\n        <Button\r\n          variant=\"ghost\"\r\n          // borderColor=\"black\"\r\n          // color=\"black\"\r\n          // backgroundColor=\"white\"\r\n          // variant=\"outline\"\r\n        >\r\n          Our Participation\r\n        </Button>\r\n      </Link>\r\n      <Link to=\"/contact\">\r\n        <Button\r\n          variant=\"ghost\"\r\n          // borderColor=\"black\"\r\n          // color=\"black\"\r\n          // backgroundColor=\"white\"\r\n          // variant=\"outline\"\r\n        >\r\n          Contact\r\n        </Button>\r\n      </Link>\r\n    </Stack>\r\n  );\r\n});\r\n\r\nexport default React.memo(Desktopdropdown);\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Box,\r\n  Image,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  useColorMode,\r\n} from '@chakra-ui/react';\r\nimport './index.css';\r\nimport Appstore from '../../Store/Appstore';\r\nimport DropdownMobile from './dropdown';\r\nimport Dropdown from 'react-dropdown-animated';\r\nimport { observer } from 'mobx-react';\r\nimport Desktopdropdown from './desktopdropdown';\r\n// import { SearchIcon } from '@chakra-ui/icons';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport logomain from '../../assets/Aplus-logo-675x324-white.png';\r\nimport { CiSearch } from 'react-icons/ci';\r\nimport { useQuery } from 'react-query';\r\nimport axios from 'axios';\r\nconst Header = observer(({ BG = false }) => {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  useEffect(() => {\r\n    Appstore.setMode(localStorage.getItem(colorMode));\r\n  }, [colorMode]);\r\n  console.log(BG, 'backgroundof header');\r\n  const [showDD, setShowDD] = useState(true);\r\n  const navigate = useNavigate();\r\n  const toggleDD = () => setShowDD(false);\r\n  let options = [\r\n    {\r\n      content: 'Loading Categories Please wait',\r\n      onClick: event => {\r\n        toggleDD();\r\n        // location(`/`);\r\n      },\r\n    },\r\n  ];\r\n  let options2 = [];\r\n  const url = `${Appstore.apilink}/returncategories`;\r\n  const { data, refetch, isLoading } = useQuery(['getCategories'], async () => {\r\n    return axios.get(url).then(response => {\r\n      return response.data.data;\r\n    });\r\n  });\r\n\r\n  if (!data) {\r\n    let timer;\r\n    clearTimeout(timer);\r\n    timer = setTimeout(() => {\r\n      refetch();\r\n    }, 4000);\r\n  }\r\n\r\n  if (!isLoading && data) {\r\n    data.map(e => {\r\n      options2.push({\r\n        content: e.catname,\r\n        onClick: event => {\r\n          toggleDD();\r\n          navigate(`/products/${e.catid}/${e.catname}`);\r\n        },\r\n      });\r\n      console.log(e, 'data for categories');\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    if (!showDD) setShowDD(true);\r\n  }, [showDD]);\r\n  return (\r\n    <Box\r\n      className={`mainHeader ${Appstore.footer || BG ? 'mainHeader2' : 'mainHeader2'}`}\r\n      as=\"section\"\r\n    >\r\n      <Box className=\"header\" textAlign=\"center\">\r\n        <HeaderLogo colorMode={colorMode} Logo={logomain} />\r\n        {/* </Box>\r\n      <Box className=\"secondHeader\"> */}\r\n        {Appstore.device ? (\r\n          <Box\r\n            display=\"flex\"\r\n            className=\"headerSecondPart\"\r\n            flexDir={'row'}\r\n            gap={15}\r\n          >\r\n            {/* <InputGroup\r\n              display={'flex'}\r\n              alignItems={'center'}\r\n              className=\"inputheaderSearchMain\"\r\n              size=\"xl\"\r\n            >\r\n              <Input\r\n                pr=\".5rem\"\r\n                className=\"inputheaderSearch\"\r\n                type={'text'}\r\n                w={'280px'}\r\n                placeholder=\"Search\"\r\n              />\r\n              <InputRightElement marginBottom={'6px'} right={'6px'}>\r\n                <CiSearch className=\"inputheaderSearchIcon\" />\r\n              </InputRightElement>\r\n            </InputGroup> */}\r\n            {/* {showDD ? (\r\n              <Dropdown\r\n                options={data ? options2 : options}\r\n                initial={200}\r\n                exit={4}\r\n                value=\"Products\"\r\n              />\r\n            ) : (\r\n              ''\r\n            )} */}\r\n            <Box className=\"desktopSlider\">\r\n              <DropdownMobile />\r\n            </Box>\r\n          </Box>\r\n        ) : (\r\n          <>\r\n            <Desktopdropdown />\r\n            <InputGroup className=\"inputheaderSearchMain\" size=\"xl\">\r\n              <Input\r\n                pr=\".5rem\"\r\n                className=\"inputheaderSearch\"\r\n                type={'text'}\r\n                w={'230px'}\r\n                placeholder=\"Search\"\r\n              />\r\n              <InputRightElement marginBottom={'6px'} right={'6px'}>\r\n                <CiSearch className=\"inputheaderSearchIcon\" />\r\n              </InputRightElement>\r\n            </InputGroup>\r\n          </>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n});\r\n\r\nexport default React.memo(Header);\r\n\r\nfunction HeaderLogo({ colorMode, Logo }) {\r\n  return (\r\n    <Box className=\"titleText\">\r\n      <Link to=\"/\">\r\n        <Image loading=\"lazy\" src={Logo} alt=\"Aplus Audios\" />\r\n        {/* //   <Heading className={`HeaderText`} */}\r\n        {/* // src={`${colorMode != 'dark' ? Logo : Logo2}`}\r\n          // alt=\"Aplus Audios\"\r\n        // >\r\n        //   A-Plus */}\r\n        {/* // </Heading> */}\r\n      </Link>\r\n    </Box>\r\n  );\r\n}\r\n"],"names":["Navigation","observer","_ref","timer","onClose","navigate","useNavigate","toggleDD","options","content","onClick","event","options2","url","concat","Appstore","apilink","_useQuery","useQuery","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","axios","get","then","response","data","stop","refetch","isLoading","clearTimeout","setTimeout","map","e","push","catname","_onClick","_callee2","_context2","console","log","catid","_x","apply","arguments","_jsxs","Stack","as","children","_jsx","Link","to","Dropdown","initial","exit","value","DrawerMenu","_useDisclosure","useDisclosure","isOpen","onOpen","btnRef","React","_Fragment","Button","ref","backgroundColor","fontSize","padding","AiOutlineMenu","Drawer","placement","finalFocusRef","DrawerOverlay","className","DrawerContent","DrawerCloseButton","DrawerHeader","DrawerBody","LayoutWithMenu","_ref3","HStack","Box","DropdownMobile","containerSize","Desktopdropdown","_useState","useState","_useState2","_slicedToArray","showDD","setShowDD","useEffect","direction","m","gap","justifyContent","align","variant","Header","_ref$BG","BG","_useColorMode","useColorMode","colorMode","toggleColorMode","setMode","localStorage","getItem","footer","textAlign","HeaderLogo","Logo","logomain","device","display","flexDir","InputGroup","size","Input","pr","type","w","placeholder","InputRightElement","marginBottom","right","CiSearch","Image","loading","src","alt"],"sourceRoot":""}