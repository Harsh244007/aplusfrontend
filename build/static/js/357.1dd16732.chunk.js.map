{"version":3,"file":"static/js/357.1dd16732.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/layout/dist/chunk-Z47J5YMH.mjs","Components/SingleMainProduct/index.jsx","../node_modules/@badrap/bar-of-progress/src/index.ts","../node_modules/@chakra-ui/button/dist/chunk-DGWZA2DU.mjs","../node_modules/@chakra-ui/button/dist/chunk-HCASMTTF.mjs","../node_modules/@chakra-ui/button/dist/chunk-HNNHG6RU.mjs","../node_modules/@chakra-ui/button/dist/chunk-NAA7TEES.mjs","../node_modules/@chakra-ui/button/dist/chunk-FRFD4OXU.mjs","../node_modules/@chakra-ui/react-use-merge-refs/dist/index.mjs"],"sourcesContent":["// src/list.tsx\nimport { Icon } from \"@chakra-ui/icon\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [ListStylesProvider, useListStyles] = createContext({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `\n});\nvar List = forwardRef(function List2(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props);\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props);\n  const validChildren = getValidChildren(children);\n  const selector = \"& > *:not(style) ~ *:not(style)\";\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {};\n  return /* @__PURE__ */ jsx(ListStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n    chakra.ul,\n    {\n      ref,\n      listStyleType: styleType,\n      listStylePosition: stylePosition,\n      role: \"list\",\n      __css: { ...styles.container, ...spacingStyle },\n      ...rest,\n      children: validChildren\n    }\n  ) });\n});\nList.displayName = \"List\";\nvar OrderedList = forwardRef((props, ref) => {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ol\", styleType: \"decimal\", marginStart: \"1em\", ...rest });\n});\nOrderedList.displayName = \"OrderedList\";\nvar UnorderedList = forwardRef(function UnorderedList2(props, ref) {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ul\", styleType: \"initial\", marginStart: \"1em\", ...rest });\n});\nUnorderedList.displayName = \"UnorderedList\";\nvar ListItem = forwardRef(function ListItem2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(chakra.li, { ref, ...props, __css: styles.item });\n});\nListItem.displayName = \"ListItem\";\nvar ListIcon = forwardRef(function ListIcon2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(Icon, { ref, role: \"presentation\", ...props, __css: styles.icon });\n});\nListIcon.displayName = \"ListIcon\";\n\nexport {\n  useListStyles,\n  List,\n  OrderedList,\n  UnorderedList,\n  ListItem,\n  ListIcon\n};\n","import React, { useEffect } from 'react';\r\nimport './index.css';\r\nimport { Box, Button, Heading, Image, List, ListItem, Text, useColorModeValue } from '@chakra-ui/react';\r\nimport ProgressBar from '@badrap/bar-of-progress';\r\nimport { SingleProductCard } from '../Home/FeaturedProducts/singleproduct';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nimport first from '../../assets/Rectangle 16.svg';\r\nconst MainProductDetails = () => {\r\n  const progress = new ProgressBar({\r\n    size: 2,\r\n    color: '#29e',\r\n    className: 'bar-of-progress',\r\n    delay: 80,\r\n  });\r\n  setTimeout(() => {\r\n    progress.finish();\r\n  }, 2000);\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    // Appstore.setFooter(true)\r\n  }, []);\r\n  let { id } = useParams();\r\n  if (!id) {\r\n    id = 'Loudspeaker';\r\n  }\r\n  return (\r\n    <Box\r\n      className=\"mainSubProductsMain\"\r\n      as=\"section\"\r\n      p={'20px'}\r\n      maxW={'1220px'}\r\n      m={'auto'}\r\n      mt={'100px'}\r\n    >\r\n      {/* <Box> */}\r\n\r\n      <Link className=\"goBackMain\" to={`/products`}>\r\n        <Button>Go Back</Button>\r\n      </Link>\r\n      <Heading textAlign={'center'}>{id}</Heading>\r\n      {/* </Box> */}\r\n      <Box\r\n        display={'flex'}\r\n        gap={'30px'}\r\n        flexWrap={'wrap'}\r\n        justifyContent={'space-around'}\r\n        alignItems={'center'}\r\n      >\r\n        <Box w={'350px'} h={'350px'} border={'2px dashed #dedede'}>\r\n          <Image w={'346px'} h={'346px'} loading=\"lazy\" src={first} />\r\n        </Box>\r\n\r\n        <Box className='secondBox' w={'750px'}>\r\n        <Box>\r\n              <Text\r\n                fontSize={{ base: '16px', lg: '18px' }}\r\n                color={useColorModeValue('yellow.500', 'yellow.300')}\r\n                fontWeight={'500'}\r\n                textTransform={'uppercase'}\r\n                mb={'4'}>\r\n                Product Details\r\n              </Text>\r\n\r\n              <List spacing={2}>\r\n                <ListItem>\r\n                  <Text as={'span'} fontWeight={'bold'}>\r\n                    Between lugs:\r\n                  </Text>{' '}\r\n                  20 mm\r\n                </ListItem>\r\n                <ListItem>\r\n                  <Text as={'span'} fontWeight={'bold'}>\r\n                    Bracelet:\r\n                  </Text>{' '}\r\n                  leather strap\r\n                </ListItem>\r\n                <ListItem>\r\n                  <Text as={'span'} fontWeight={'bold'}>\r\n                    Case:\r\n                  </Text>{' '}\r\n                  Steel\r\n                </ListItem>\r\n                <ListItem>\r\n                  <Text as={'span'} fontWeight={'bold'}>\r\n                    Case diameter:\r\n                  </Text>{' '}\r\n                  42 mm\r\n                </ListItem>\r\n                <ListItem>\r\n                  <Text as={'span'} fontWeight={'bold'}>\r\n                    Dial color:\r\n                  </Text>{' '}\r\n                  Black\r\n                </ListItem>\r\n                <ListItem>\r\n                  <Text as={'span'} fontWeight={'bold'}>\r\n                    Crystal:\r\n                  </Text>{' '}\r\n                  Domed, scratch‑resistant sapphire crystal with anti‑reflective\r\n                  treatment inside\r\n                </ListItem>\r\n                <ListItem>\r\n                  <Text as={'span'} fontWeight={'bold'}>\r\n                    Water resistance:\r\n                  </Text>{' '}\r\n                  5 bar (50 metres / 167 feet){' '}\r\n                </ListItem>\r\n              </List>\r\n            </Box>\r\n        </Box>\r\n      </Box>\r\n      <Box m={\"auto\"} gap={'30px'}>\r\n        <Heading>You might be interested in</Heading>\r\n        <Box display={'flex'} flexWrap={'wrap'} gap={'30px'}>\r\n          \r\n        <SingleProductCard\r\n          heading={'LoudSpeaker'}\r\n          icon={first}\r\n          href={`/productDetails/1`}\r\n        />\r\n             <SingleProductCard\r\n          heading={'LoudSpeaker'}\r\n          icon={first}\r\n          href={`/productDetails/1`}\r\n        />\r\n             <SingleProductCard\r\n          heading={'LoudSpeaker'}\r\n          icon={first}\r\n          href={`/productDetails/1`}\r\n        />\r\n             <SingleProductCard\r\n          heading={'LoudSpeaker'}\r\n          icon={first}\r\n          href={`/productDetails/1`}\r\n        />\r\n      </Box>\r\n      \r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport default React.memo(MainProductDetails);\r\n","interface ProgressBarConfig {\n  /**\n   * The size (height) of the progress bar.\n   * Numeric values get converted to px. */\n  size: number | string;\n  /**\n   * Color of the progress bar. Also used for the glow\n   * around the bar. */\n  color: string;\n  /**\n   * Class name used for the progress bar element. */\n  className: string;\n  /**\n   * How many milliseconds to wait before the progress bar\n   * animation starts after calling .start(). */\n  delay: number;\n}\n\nexport default class ProgressBar {\n  /** Show the progress bar and begin animating it. */\n  start: () => void;\n\n  /** End the progress bar animation. */\n  finish: () => void;\n\n  constructor(options?: Partial<ProgressBarConfig>) {\n    const assign = Object.assign;\n    const config: ProgressBarConfig = assign(\n      {\n        size: 2,\n        color: \"#29e\",\n        className: \"bar-of-progress\",\n        delay: 80,\n      },\n      options\n    );\n\n    const initialStyle = {\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      margin: 0,\n      padding: 0,\n      border: \"none\",\n      borderRadius: 0,\n      backgroundColor: config.color,\n      zIndex: 10000,\n      height:\n        typeof config.size === \"number\" ? config.size + \"px\" : config.size,\n      color: config.color,\n      opacity: 0,\n      width: \"0%\",\n    };\n\n    const startedStyle = {\n      opacity: 1,\n      width: \"99%\",\n      transition: \"width 10s cubic-bezier(0.1, 0.05, 0, 1)\",\n    };\n\n    const finishedStyle = {\n      opacity: 0,\n      width: \"100%\",\n      transition: \"width 0.1s ease-out, opacity 0.5s ease 0.2s\",\n    };\n\n    const glowStyle = {\n      opacity: 0.4,\n      boxShadow: \"3px 0 8px\",\n      height: \"100%\",\n    };\n\n    let timeout: ReturnType<typeof setTimeout> | undefined;\n    let current!: HTMLElement;\n\n    this.start = () => {\n      if (current && current.parentNode) {\n        current.parentNode.removeChild(current);\n      }\n      current = document.body.appendChild(document.createElement(\"div\"));\n      current.className = config.className + \" stopped\";\n      assign(current.style, initialStyle);\n\n      const glow = current.appendChild(document.createElement(\"div\"));\n      glow.className = \"glow\";\n      assign(glow.style, glowStyle);\n\n      if (timeout != null) {\n        clearTimeout(timeout);\n      }\n      timeout = setTimeout(() => {\n        timeout = undefined;\n        current.className = config.className + \" started\";\n        assign(current.style, startedStyle);\n      }, config.delay);\n\n      // Force a reflow, just to be sure that the initial style takes effect.\n      current.scrollTop = 0;\n    };\n\n    this.finish = () => {\n      if (timeout != null) {\n        clearTimeout(timeout);\n        timeout = undefined;\n      }\n      if (current) {\n        current.className = config.className + \" finished\";\n        assign(current.style, finishedStyle);\n      }\n    };\n  }\n}\n","// src/button-context.ts\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [ButtonGroupProvider, useButtonGroup] = createContext({\n  strict: false,\n  name: \"ButtonGroupContext\"\n});\n\nexport {\n  ButtonGroupProvider,\n  useButtonGroup\n};\n","// src/button-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { cloneElement, isValidElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonIcon(props) {\n  const { children, className, ...rest } = props;\n  const _children = isValidElement(children) ? cloneElement(children, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : children;\n  const _className = cx(\"chakra-button__icon\", className);\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      display: \"inline-flex\",\n      alignSelf: \"center\",\n      flexShrink: 0,\n      ...rest,\n      className: _className,\n      children: _children\n    }\n  );\n}\nButtonIcon.displayName = \"ButtonIcon\";\n\nexport {\n  ButtonIcon\n};\n","// src/button-spinner.tsx\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonSpinner(props) {\n  const {\n    label,\n    placement,\n    spacing = \"0.5rem\",\n    children = /* @__PURE__ */ jsx(Spinner, { color: \"currentColor\", width: \"1em\", height: \"1em\" }),\n    className,\n    __css,\n    ...rest\n  } = props;\n  const _className = cx(\"chakra-button__spinner\", className);\n  const marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\";\n  const spinnerStyles = useMemo(\n    () => ({\n      display: \"flex\",\n      alignItems: \"center\",\n      position: label ? \"relative\" : \"absolute\",\n      [marginProp]: label ? spacing : 0,\n      fontSize: \"1em\",\n      lineHeight: \"normal\",\n      ...__css\n    }),\n    [__css, label, marginProp, spacing]\n  );\n  return /* @__PURE__ */ jsx(chakra.div, { className: _className, ...rest, __css: spinnerStyles, children });\n}\nButtonSpinner.displayName = \"ButtonSpinner\";\n\nexport {\n  ButtonSpinner\n};\n","import {\n  useButtonType\n} from \"./chunk-FRFD4OXU.mjs\";\nimport {\n  useButtonGroup\n} from \"./chunk-DGWZA2DU.mjs\";\nimport {\n  ButtonIcon\n} from \"./chunk-HCASMTTF.mjs\";\nimport {\n  ButtonSpinner\n} from \"./chunk-HNNHG6RU.mjs\";\n\n// src/button.tsx\nimport { useMergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar Button = forwardRef((props, ref) => {\n  const group = useButtonGroup();\n  const styles = useStyleConfig(\"Button\", { ...group, ...props });\n  const {\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    isLoading,\n    isActive,\n    children,\n    leftIcon,\n    rightIcon,\n    loadingText,\n    iconSpacing = \"0.5rem\",\n    type,\n    spinner,\n    spinnerPlacement = \"start\",\n    className,\n    as,\n    ...rest\n  } = omitThemingProps(props);\n  const buttonStyles = useMemo(() => {\n    const _focus = { ...styles == null ? void 0 : styles[\"_focus\"], zIndex: 1 };\n    return {\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      userSelect: \"none\",\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\",\n      outline: \"none\",\n      ...styles,\n      ...!!group && { _focus }\n    };\n  }, [styles, group]);\n  const { ref: _ref, type: defaultType } = useButtonType(as);\n  const contentProps = { rightIcon, leftIcon, iconSpacing, children };\n  return /* @__PURE__ */ jsxs(\n    chakra.button,\n    {\n      ref: useMergeRefs(ref, _ref),\n      as,\n      type: type != null ? type : defaultType,\n      \"data-active\": dataAttr(isActive),\n      \"data-loading\": dataAttr(isLoading),\n      __css: buttonStyles,\n      className: cx(\"chakra-button\", className),\n      ...rest,\n      disabled: isDisabled || isLoading,\n      children: [\n        isLoading && spinnerPlacement === \"start\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--start\",\n            label: loadingText,\n            placement: \"start\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        ),\n        isLoading ? loadingText || /* @__PURE__ */ jsx(chakra.span, { opacity: 0, children: /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }) }) : /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }),\n        isLoading && spinnerPlacement === \"end\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--end\",\n            label: loadingText,\n            placement: \"end\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        )\n      ]\n    }\n  );\n});\nButton.displayName = \"Button\";\nfunction ButtonContent(props) {\n  const { leftIcon, rightIcon, children, iconSpacing } = props;\n  return /* @__PURE__ */ jsxs(Fragment, { children: [\n    leftIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginEnd: iconSpacing, children: leftIcon }),\n    children,\n    rightIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginStart: iconSpacing, children: rightIcon })\n  ] });\n}\n\nexport {\n  Button\n};\n","// src/use-button-type.tsx\nimport { useCallback, useState } from \"react\";\nfunction useButtonType(value) {\n  const [isButton, setIsButton] = useState(!value);\n  const refCallback = useCallback((node) => {\n    if (!node)\n      return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  const type = isButton ? \"button\" : void 0;\n  return { ref: refCallback, type };\n}\n\nexport {\n  useButtonType\n};\n","// src/index.ts\nimport { useMemo } from \"react\";\nfunction assignRef(ref, value) {\n  if (ref == null)\n    return;\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  return (node) => {\n    refs.forEach((ref) => {\n      assignRef(ref, node);\n    });\n  };\n}\nfunction useMergeRefs(...refs) {\n  return useMemo(() => mergeRefs(...refs), refs);\n}\nexport {\n  assignRef,\n  mergeRefs,\n  useMergeRefs\n};\n"],"names":["_createContext","createContext","name","errorMessage","_createContext2","_slicedToArray","ListStylesProvider","useListStyles","List","forwardRef","props","ref","styles","useMultiStyleConfig","_omitThemingProps","omitThemingProps","children","_omitThemingProps$sty","styleType","stylePosition","spacing","rest","_objectWithoutProperties","_excluded","validChildren","getValidChildren","spacingStyle","_defineProperty","mt","jsx","value","chakra","_objectSpread","listStyleType","listStylePosition","role","__css","container","displayName","as","_excluded2","marginStart","_excluded3","ListItem","item","Icon","icon","MainProductDetails","progress","ProgressBar","size","color","className","delay","setTimeout","finish","useEffect","window","scrollTo","id","useParams","_jsxs","Box","p","maxW","m","_jsx","Link","to","Button","Heading","textAlign","display","gap","flexWrap","justifyContent","alignItems","w","h","border","Image","loading","src","first","Text","fontSize","base","lg","useColorModeValue","fontWeight","textTransform","mb","SingleProductCard","heading","href","React","e","start","t","i","o","Object","assign","s","a","position","top","left","margin","padding","borderRadius","backgroundColor","zIndex","height","opacity","width","d","transition","l","n","boxShadow","this","parentNode","removeChild","document","body","appendChild","createElement","style","clearTimeout","scrollTop","strict","useButtonGroup","ButtonIcon","_children","isValidElement","cloneElement","focusable","_className","cx","alignSelf","flexShrink","ButtonSpinner","label","placement","_props$spacing","_props$children","Spinner","marginProp","spinnerStyles","useMemo","_objectSpread2","group","useStyleConfig","_omitThemingProps$isD","isDisabled","isLoading","isActive","leftIcon","rightIcon","loadingText","_omitThemingProps$ico","iconSpacing","type","spinner","_omitThemingProps$spi","spinnerPlacement","buttonStyles","_focus","appearance","userSelect","whiteSpace","verticalAlign","outline","_useButtonType","_useState","useState","_useState2","isButton","setIsButton","useCallback","node","tagName","useButtonType","_ref","defaultType","contentProps","jsxs","useMergeRefs","dataAttr","disabled","ButtonContent","Fragment","marginEnd","mergeRefs","_len","arguments","length","refs","Array","_key","forEach","current","error","Error","concat","assignRef","_len2","_key2","apply"],"sourceRoot":""}