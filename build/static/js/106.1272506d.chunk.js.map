{"version":3,"file":"static/js/106.1272506d.chunk.js","mappings":"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","sources":["Components/Common/pagination.jsx","Components/Home/Categories/singleproduct.jsx","Components/Common/ImageModal.jsx","Components/SingleMainProduct/index.jsx"],"sourcesContent":["import { Box, Button } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nimport \"./common.css\";\r\n\r\nconst Pagination = ({\r\n    totalPosts,\r\n    postsPerPage,\r\n    setCurrentPage,\r\n    currentPage,\r\n}) => {\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n        pages.push(i);\r\n    }\r\n    return (\r\n        <Box className='pagination'>\r\n            {pages.map((page, index) => {\r\n                return (\r\n                    <Button\r\n                        key={index}\r\n                        onClick={() => setCurrentPage(page)}\r\n                        className={page == currentPage ? \"active\" : \"\"}>\r\n                        {page}\r\n                    </Button>\r\n                );\r\n            })}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default React.memo(Pagination);","import React from 'react';\r\nimport './index.css';\r\nimport {\r\n  Box,\r\n  // Container,\r\n  // Flex,\r\n  Heading,\r\n  // Input,\r\n  // InputGroup,\r\n  // InputRightAddon,\r\n  // Avatar,\r\n  // keyframes,\r\n  // SimpleGrid,\r\n  // Button,\r\n  Image,\r\n  // Icon,\r\n  Stack,\r\n  Text,\r\n  // useColorModeValue,\r\n} from '@chakra-ui/react';\r\n\r\nimport Appstore from '../../../Store/Appstore';\r\nimport { AiOutlineArrowRight, AiOutlineArrowDown } from 'react-icons/ai';\r\nimport { Link } from 'react-router-dom';\r\nconst SingleProductCard = React.memo(({ heading, description, icon, href ,referLink=false,onClick}) => {\r\n// if(onClick == undefine) onClick=()={()=>{}}\r\n  return (\r\n    <>\r\n    {!referLink?\r\n    <Link to={href} >\r\n    <Box\r\n      maxW=\"200px\"\r\n      // w={'full'}\r\n      className=\"featueProductsCard1\"\r\n      // borderWidth=\"1px\"\r\n      borderRadius=\"6px\"\r\n      h={285}\r\n      w=\"219px\"\r\n      // h=\"236px\"\r\n      overflow=\"hidden\"\r\n      // p={5}\r\n    >\r\n      <Stack className='featueProductsCard1FirstBox'  p={4} background={`#F8FBFD`} rowGap={5} position={\"relative\"} zIndex={3}>\r\n        <Image loading=\"lazy\"\r\n          src={icon}\r\n          position={\"relative\"} zIndex={3}\r\n          w=\"179px\"\r\n          height=\"196px\"\r\n          objectFit=\"contain\"\r\n          alt={heading}\r\n          borderRadius={0}\r\n          // className=\"featuredprocutsimage\"\r\n        />\r\n      </Stack>\r\n      {/* <Box className=\"overlay\"></Box> */}\r\n      <Box className='featueProductsCard1SecondBox' mt={2} position={\"relative\"} zIndex={5}>\r\n        <Heading overflow={\"visible\"} height={\"fit-content\"} fontSize={18} fontWeight={600} size=\"md\" position={\"relative\"} zIndex={5}>\r\n          {heading}\r\n        </Heading>\r\n      </Box>\r\n    </Box>\r\n    </Link>:\r\n    \r\n    <a href={href} target=\"_blank\">\r\n      <Box\r\n      maxW=\"200px\"\r\n      // w={'full'}\r\n      className=\"featueProductsCard1\"\r\n      // borderWidth=\"1px\"\r\n      borderRadius=\"6px\"\r\n      h={285}\r\n      w=\"219px\"\r\n      // h=\"236px\"\r\n      overflow=\"hidden\"\r\n      // p={5}\r\n    >\r\n      <Stack align={'center'} p={4} background={`#F8FBFD`} rowGap={5}>\r\n        <Image loading=\"lazy\"\r\n          src={icon}\r\n          w=\"179px\"\r\n          height=\"196px\"\r\n          objectFit=\"contain\"\r\n          alt={heading}\r\n          borderRadius={0}\r\n          // className=\"featuredprocutsimage\"\r\n        />\r\n        {/* <Button variant={'solid'} size={'md'}>\r\n          View Product\r\n        </Button> */}\r\n      </Stack>\r\n\r\n      <Box mt={2}>\r\n        <Heading fontSize={20} fontWeight={600} size=\"md\">\r\n          {heading}\r\n        </Heading>\r\n      </Box>\r\n    </Box>\r\n      </a>}\r\n    </>\r\n  );\r\n});\r\nconst CategoriesProductCard = React.memo(({ icon }) => {\r\n\r\n  return (\r\n    <Box\r\n      maxW=\"219px\"\r\n      // w={'full'}\r\n      className=\"featueProductsCard2\"\r\n      // borderWidth=\"1px\"\r\n      borderRadius=\"16px\"\r\n      w=\"219px\"\r\n      // h=\"236px\"\r\n      overflow=\"hidden\"\r\n      // p={5}\r\n    >\r\n      <Heading className=\"headerfeatureprod\">All Categories</Heading>\r\n      <Text className=\"textfeatureprod\">\r\n        View All{' '}\r\n        {Appstore.device ? <AiOutlineArrowRight /> : <AiOutlineArrowDown />}\r\n      </Text>\r\n      {/* <Stack align={'center'} p={5} background={`#F8FBFD`} rowGap={5}> */}\r\n      <Image loading=\"lazy\"\r\n        src={icon}\r\n        w=\"219px\"\r\n        height=\"284px\"\r\n        objectFit=\"contain\"\r\n        // alt={heading}\r\n        borderRadius={0}\r\n        // className=\"featuredprocutsimage\"\r\n      />\r\n      {/* <Button variant={'solid'} size={'md'}>\r\n          View Product\r\n        </Button> */}\r\n      {/* </Stack> */}\r\n\r\n      {/* <Box mt={2}> */}\r\n\r\n      {/* <Heading fontSize={20} fontWeight={600} size=\"md\">{heading}</Heading> */}\r\n      {/* </Box> */}\r\n    </Box>\r\n  );\r\n});\r\n\r\nexport { SingleProductCard, CategoriesProductCard };\r\n","import React from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { Box, Image, CloseButton } from '@chakra-ui/react';\r\n\r\nconst ImageModal = ({ isOpen, imageUrl, onClose }) => {\r\n  if (!isOpen) return null;\r\n\r\n  return createPortal(\r\n    <Box\r\n      position=\"fixed\"\r\n      top=\"0\"\r\n      left=\"0\"\r\n      width=\"100%\"\r\n      cursor={\"pointer\"}\r\n      height=\"100%\"\r\n      backgroundColor=\"rgba(0, 0, 0, 0.8)\"\r\n      display=\"flex\"\r\n      backdropFilter=\"blur(10px)\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      onClick={()=>onClose()}\r\n      zIndex=\"10040\"\r\n    >\r\n      <CloseButton\r\n        position=\"absolute\"\r\n        top=\"10px\"\r\n        width={\"50px\"}\r\n        border={\"1px solid brown\"}\r\n        borderRadius={\"50%\"}\r\n        height={\"50px\"}\r\n        right=\"10px\"\r\n        className='ModalCloseButton'\r\n        color={\"white\"}\r\n        onClick={onClose}\r\n      />\r\n      <Box position=\"relative\" width=\"80%\" maxWidth=\"800px\" \r\n      zIndex=\"10\" onClick={()=>{}}>\r\n        <Image src={imageUrl} alt=\"Product\" className='modalImage' />\r\n      </Box>\r\n      <style>\r\n      {`.ModalCloseButton svg{\r\n        width:25px;\r\n        height:25px\r\n      }\r\n      .modalImage{\r\n        \r\n      }\r\n      `}\r\n      </style>\r\n    </Box>,\r\n    document.getElementById('modal-root') // Create a div with the id 'modal-root' in your index.html file\r\n  );\r\n};\r\n\r\nexport default ImageModal;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './index.css';\r\nimport ProductsJSON from '../../Configs/JSON/returnProductDetails.json';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Heading,\r\n  Image,\r\n  // List,\r\n  // ListItem,\r\n  Skeleton,\r\n  Text,\r\n  useColorModeValue,\r\n} from '@chakra-ui/react';\r\nimport { SingleProductCard } from '../Home/Categories/singleproduct';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Pagination from '../Common/pagination';\r\nimport Appstore from '../../Store/Appstore';\r\n// import { useQuery } from 'react-query';\r\n// import axios from 'axios';\r\nimport ImageModal from './../Common/ImageModal';\r\nconst MainProductDetails = () => {\r\n  const [desc, setDesc] = useState('');\r\n  let { id, catid, name } = useParams();\r\n\r\n  useEffect(() => {\r\n    // refetch();\r\n    window.scrollTo(0, 0);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id]);\r\n  const FilterResult = ProductsJSON.data.filter(e => e.pro_name == name);\r\n  // console.log('filtered results1', FilterResult);\r\n  if (FilterResult.length === 0) {\r\n    const newFilterResult2 = ProductsJSON.data.filter(e => e.showcaseid == id);\r\n    FilterResult.push(newFilterResult2[0]);\r\n    // console.log('filtered results2', newFilterResult2);\r\n  }\r\n  console.log('filtered results3', FilterResult);\r\n  const [cpage, setCpage] = useState(1);\r\n  const postsPerPage = 4;\r\n  const lastposti = cpage * postsPerPage;\r\n  const firstposti = lastposti - postsPerPage;\r\n  let currentposts;\r\n  if (ProductsJSON.data) {\r\n    currentposts = ProductsJSON.data.slice(firstposti, lastposti);\r\n  }\r\n  let color = useColorModeValue('yellow.500', 'yellow.300');\r\n  const [isImageModalOpen, setIsImageModalOpen] = useState(false);\r\n  const [selectedImage, setSelectedImage] = useState('');\r\n\r\n  const openImageModal = imageUrl => {\r\n    setSelectedImage(imageUrl);\r\n    setIsImageModalOpen(true);\r\n  };\r\n\r\n  const closeImageModal = () => {\r\n    setIsImageModalOpen(false);\r\n    setSelectedImage('');\r\n  };\r\n  useEffect(() => setDesc(''), [id]);\r\n  useEffect(() => {\r\n    if (FilterResult.length !== 0 && desc == '') {\r\n      if (\r\n        FilterResult[0].pro_desc &&\r\n        FilterResult[0].pro_desc == '0' &&\r\n        FilterResult[0].description &&\r\n        FilterResult[0].description != ''\r\n      ) {\r\n        setDesc(FilterResult[0].description);\r\n        // Instead of setting desc here, you can directly render the data in your component\r\n      } else {\r\n        console.log(FilterResult, 'inside of useffect');\r\n        const regex = /s:(\\d+):\"(.*?)\";/g;\r\n        let matches = [...FilterResult[0].pro_desc.matchAll(regex)];\r\n        const deserializedObjects = matches.map(match => {\r\n          const array = match[2];\r\n          const deserializedObject = `{${array}}`;\r\n          return deserializedObject;\r\n        });\r\n        setDesc(deserializedObjects);\r\n      }\r\n    }\r\n  }, [FilterResult]);\r\n  return (\r\n    <Box\r\n      className=\"mainSubProductsMain\"\r\n      as=\"section\"\r\n      flexDirection={'column'}\r\n      p={'20px'}\r\n      maxW={'1220px'}\r\n      m={'auto'}\r\n      mt={'100px'}\r\n    >\r\n      <Link className=\"goBackMain\" to={`/products/${catid}`}>\r\n        <Button\r\n          onClick={() => setDesc('')}\r\n          loadingText={'Loading'}\r\n          isLoading={FilterResult.length !== 0 ? false : true}\r\n        >\r\n          Go Back\r\n        </Button>\r\n      </Link>\r\n      <Heading textAlign={'center'}>\r\n        {FilterResult.length === 0 && !FilterResult[0].pro_name\r\n          ? `Loading ${name}`\r\n          : FilterResult[0].pro_name}\r\n      </Heading>\r\n      {FilterResult.length !== 0 ? (\r\n        <Box\r\n          display={'flex'}\r\n          gap={'30px'}\r\n          className=\"singleProductMainContainer\"\r\n          flexWrap={'wrap'}\r\n          justifyContent={'space-around'}\r\n          alignItems={'center'}\r\n        >\r\n          <Box\r\n            className=\"singleProductImage\"\r\n            w={'350px'}\r\n            h={'350px'}\r\n            border={'2px dashed #dedede'}\r\n          >\r\n            <Image\r\n              w={'346px'}\r\n              alt={FilterResult[0].pro_image}\r\n              objectFit={'contain'}\r\n              h={'346px'}\r\n              onClick={() =>\r\n                openImageModal(\r\n                  `${Appstore.imageLink}/${FilterResult[0].pro_image}`\r\n                )\r\n              }\r\n              loading=\"lazy\"\r\n              src={`${Appstore.imageLink}/${FilterResult[0].pro_image}`}\r\n            />\r\n          </Box>\r\n\r\n          <Box className=\"secondBox\" w={'750px'}>\r\n            <Box>\r\n              <Text\r\n                fontWeight={'bold'}\r\n                fontSize={{ base: '16px', lg: '18px' }}\r\n                color={color}\r\n                // fontWeight={'500'}\r\n                textTransform={'uppercase'}\r\n                mb={'4'}\r\n              >\r\n                Product Details\r\n              </Text>\r\n\r\n              <Box spacing={2}>\r\n                {desc && !desc.includes('\\r\\n') && !desc.includes(' | ') ? (\r\n                  <>\r\n                    {desc.map((e, i) => {\r\n                      if (i % 4 == 0 && i != 0) {\r\n                        console.log(e, desc[i - 3], 'main data');\r\n                        return (\r\n                          <Box key={i}>\r\n                            <Text as={'span'} fontWeight={'bold'}>\r\n                              {desc[i - 3].replace(/{|}/g, '')}\r\n                            </Text>{' '}\r\n                            {desc[i - 1].replace(/{|}/g, '')}\r\n                          </Box>\r\n                        );\r\n                      }\r\n                    })}\r\n                  </>\r\n                ) : desc.includes('\\r\\n') && !desc.includes(' | ') ? (\r\n                  desc.split('\\r\\n').map((e, i) => {\r\n                    return (\r\n                      <Box key={i}>\r\n                        <Text as={'span'} fontWeight={'bold'}>\r\n                          {e}\r\n                        </Text>{' '}\r\n                      </Box>\r\n                    );\r\n                  })\r\n                ) : desc.includes(' | ') ? (\r\n                  desc.split(' | ').map((e, i) => {\r\n                    return (\r\n                      <Box key={i}>\r\n                        <Text as={'span'} fontWeight={'bold'}>\r\n                          {e}\r\n                        </Text>{' '}\r\n                      </Box>\r\n                    );\r\n                  })\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      ) : (\r\n        <Skeleton height={650} width=\"100%\" />\r\n      )}\r\n      {ProductsJSON.data.length !== 0 ? (\r\n        <Box m={'auto'} gap={'30px'} mt=\"40px\">\r\n          <Heading mb=\"15px\">You might be interested in</Heading>\r\n          <Box\r\n            display={'flex'}\r\n            flexWrap={'wrap'}\r\n            gap={'30px'}\r\n            justifyContent={'space-evenly'}\r\n          >\r\n            {currentposts.map(e => {\r\n              console.log(e, 'data for all products');\r\n              let name = e.pro_name.replace(' ', '').replace(' ', '');\r\n              console.log(name, e.pro_name, 'name of single product');\r\n              return (\r\n                <SingleProductCard\r\n                  referLink={false}\r\n                  onClick={() => setDesc('')}\r\n                  heading={e.pro_name ? e.pro_name : 'LoudSpeaker'}\r\n                  icon={`${Appstore.imageLink}/${e.pro_image}`}\r\n                  href={`/productDetails/${e.catid}/${e.showcaseid}/${name}`}\r\n                />\r\n              );\r\n            })}\r\n          </Box>\r\n          {ProductsJSON.data.length !== 0 ? (\r\n            <Pagination\r\n              totalPosts={ProductsJSON.data.length / 8}\r\n              postsPerPage={postsPerPage}\r\n              setCurrentPage={setCpage}\r\n              currentPage={cpage}\r\n            />\r\n          ) : (\r\n            <Skeleton height={50} width=\"100%\" />\r\n          )}\r\n        </Box>\r\n      ) : (\r\n        <Skeleton height={450} width=\"100%\" />\r\n      )}\r\n\r\n      {/* <h2 style={{ margin: 'auto', fontSize: '24px' }}>\r\n        This page is under construction\r\n      </h2> */}\r\n      <ImageModal\r\n        isOpen={isImageModalOpen}\r\n        imageUrl={selectedImage}\r\n        onClose={closeImageModal}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\nexport default React.memo(MainProductDetails);\r\n{\r\n  /* <ListItem>\r\n                  <Text as={'span'} fontWeight={'bold'}>\r\n                    Between lugs:\r\n                  </Text>{' '}\r\n                  20 mm\r\n                </ListItem>\r\n                \r\n                <ListItem>\r\n                  <Text as={'span'} fontWeight={'bold'}>\r\n                    Case:\r\n                  </Text>{' '}\r\n                  Steel\r\n                </ListItem>\r\n                <ListItem>\r\n                  <Text as={'span'} fontWeight={'bold'}>\r\n                    Case diameter:\r\n                  </Text>{' '}\r\n                  42 mm\r\n                </ListItem>\r\n                <ListItem>\r\n                  <Text as={'span'} fontWeight={'bold'}>\r\n                    Dial color:\r\n                  </Text>{' '}\r\n                  Black\r\n                </ListItem>\r\n                <ListItem>\r\n                  <Text as={'span'} fontWeight={'bold'}>\r\n                    Crystal:\r\n                  </Text>{' '}\r\n                  Domed, scratch‑resistant sapphire crystal with anti‑reflective\r\n                  treatment inside\r\n                </ListItem>\r\n                <ListItem>\r\n                  <Text as={'span'} fontWeight={'bold'}>\r\n                    Water resistance:\r\n                  </Text>{' '}\r\n                  5 bar (50 metres / 167 feet){' '}\r\n                </ListItem> */\r\n}\r\n"],"names":["Pagination","_ref","totalPosts","postsPerPage","setCurrentPage","currentPage","pages","i","Math","ceil","push","_jsx","Box","className","children","map","page","index","Button","onClick","React","SingleProductCard","heading","icon","description","href","_ref$referLink","referLink","_Fragment","target","_jsxs","maxW","borderRadius","h","w","overflow","Stack","align","p","background","rowGap","Image","loading","src","height","objectFit","alt","mt","Heading","fontSize","fontWeight","size","Link","to","position","zIndex","CategoriesProductCard","_ref2","Text","Appstore","device","AiOutlineArrowRight","AiOutlineArrowDown","isOpen","imageUrl","onClose","createPortal","top","left","width","cursor","backgroundColor","display","backdropFilter","justifyContent","alignItems","CloseButton","border","right","color","maxWidth","document","getElementById","MainProductDetails","_useState","useState","_useState2","_slicedToArray","desc","setDesc","_useParams","useParams","id","catid","name","useEffect","window","scrollTo","FilterResult","ProductsJSON","filter","e","pro_name","length","newFilterResult2","showcaseid","console","log","currentposts","_useState3","_useState4","cpage","setCpage","lastposti","firstposti","slice","useColorModeValue","_useState5","_useState6","isImageModalOpen","setIsImageModalOpen","_useState7","_useState8","selectedImage","setSelectedImage","pro_desc","deserializedObjects","_toConsumableArray","matchAll","match","array","concat","as","flexDirection","m","loadingText","isLoading","textAlign","gap","flexWrap","pro_image","imageLink","base","lg","textTransform","mb","spacing","includes","split","replace","Skeleton","ImageModal"],"sourceRoot":""}