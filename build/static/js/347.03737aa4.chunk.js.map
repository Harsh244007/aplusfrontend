{"version":3,"file":"static/js/347.03737aa4.chunk.js","mappings":"oMAUMA,EAAY,WAChB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CACFC,GAAG,UACHC,GAAI,UAGJC,MAAO,OAAOC,UAEdL,EAAAA,EAAAA,KAACM,EAAAA,EAAS,CAACC,KAAM,MAAOC,GAAI,EAAEH,UAC5BL,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CAACQ,UAAU,iBAAiBC,QAAS,OAAOL,UAC9CM,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACH,UAAU,gBAAgBI,OAAQ,OAAOR,SAAA,CAAC,mBACjC,IAAIS,MAAOC,cAAc,oCAAkC,eAAK,QAAIf,EAAAA,EAAAA,KAAA,KAAGgB,OAAO,SAASC,KAAK,sBAAqBZ,SAAC,oBAc3I,EACA,UAAea,EAAAA,KAAWnB,E,mMC3BtBa,GAAOO,EAAAA,EAAAA,IAAW,SAAeC,EAAOC,GAC1C,IAAMC,GAASC,EAAAA,EAAAA,IAAe,OAAQH,GACtCI,GAA0DC,EAAAA,EAAAA,IAAiBL,GAA1BM,GAAhCF,EAATf,UAAgBe,EAALG,MAAiBH,EAAVI,WAAkBJ,EAANK,QAAeC,EAAAA,EAAAA,GAAAN,EAAAO,IAC/CC,GAAeC,EAAAA,EAAAA,GAAQ,CAC3BC,UAAWd,EAAMO,MACjBQ,eAAgBf,EAAMQ,WACtBQ,cAAehB,EAAMS,SAEvB,OAAuBQ,EAAAA,EAAAA,KACrBC,EAAAA,EAAOC,GAACC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAENnB,IAAAA,EACAZ,WAAWgC,EAAAA,EAAAA,IAAG,cAAerB,EAAMX,YAChCuB,GACAN,GAAI,IACPgB,MAAOpB,IAGb,IACAV,EAAK+B,YAAc,M,2KCpBfrC,GAAYa,EAAAA,EAAAA,IAAW,SAAoBC,EAAOC,GACpD,IAAAG,GAA8CC,EAAAA,EAAAA,IAAiBL,GAAvDX,EAASe,EAATf,UAAWmC,EAAapB,EAAboB,cAAkBlB,GAAII,EAAAA,EAAAA,GAAAN,EAAAO,GACnCT,GAASC,EAAAA,EAAAA,IAAe,YAAaH,GAC3C,OAAuBiB,EAAAA,EAAAA,KACrBC,EAAAA,EAAOO,KAAGL,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAERnB,IAAAA,EACAZ,WAAWgC,EAAAA,EAAAA,IAAG,mBAAoBhC,IAC/BiB,GAAI,IACPgB,OAAKF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACAlB,GACAsB,GAAiB,CAClBlC,QAAS,OACToC,cAAe,SACfC,WAAY,aAKtB,IACAzC,EAAUqC,YAAc,W,uBC5BxB,SAASV,EAAQe,GACf,IAAMC,EAAQC,OAAOC,OAAO,CAAC,EAAGH,GAChC,IAAK,IAAII,KAAOH,OACK,IAAfA,EAAMG,WACDH,EAAMG,GAEjB,OAAOH,CACT,C","sources":["Components/Footer/subIndex.jsx","../node_modules/@chakra-ui/layout/dist/chunk-P74GIWPW.mjs","../node_modules/@chakra-ui/layout/dist/chunk-SRMZVY4F.mjs","../node_modules/@chakra-ui/object-utils/dist/chunk-R3DH46PF.mjs"],"sourcesContent":["import React from 'react';\r\nimport './index.css';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Stack,\r\n  Text,\r\n  useColorModeValue,\r\n} from '@chakra-ui/react';\r\n\r\nconst SubFooter = () => {\r\n  return (\r\n    <Box\r\n      as=\"section\"\r\n      bg={'#001620'}\r\n      // bg=\"#6876e2\"\r\n      // pb={\"50px\"}\r\n      color={'#fff'}\r\n    >\r\n      <Container maxW={'6xl'} py={2}>\r\n        <Box className=\"boxmainFooter2\" display={\"flex\"} >\r\n          <Text className=\"footersublast\" margin={\"auto\"}>\r\n            Copyright © {new Date().getFullYear()} All rights reserved | Made with {\"❤️\"} by <a target='_blank' href=\"https://tcipher.com\">TCIPHER</a>\r\n          \r\n          </Text>\r\n        </Box>\r\n      </Container>\r\n      \r\n      {/* <Container maxW={'6xl'} py={2}>\r\n        <Box className=\"boxmainFooter\">\r\n          <Text className=\"footersublast\">\r\n          </Text>\r\n        </Box>\r\n      </Container> */}\r\n    </Box>\r\n  );\r\n};\r\nexport default React.memo(SubFooter);\r\n","// src/text.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Text = forwardRef(function Text2(props, ref) {\n  const styles = useStyleConfig(\"Text\", props);\n  const { className, align, decoration, casing, ...rest } = omitThemingProps(props);\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing\n  });\n  return /* @__PURE__ */ jsx(\n    chakra.p,\n    {\n      ref,\n      className: cx(\"chakra-text\", props.className),\n      ...aliasedProps,\n      ...rest,\n      __css: styles\n    }\n  );\n});\nText.displayName = \"Text\";\n\nexport {\n  Text\n};\n","// src/container.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Container = forwardRef(function Container2(props, ref) {\n  const { className, centerContent, ...rest } = omitThemingProps(props);\n  const styles = useStyleConfig(\"Container\", props);\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-container\", className),\n      ...rest,\n      __css: {\n        ...styles,\n        ...centerContent && {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        }\n      }\n    }\n  );\n});\nContainer.displayName = \"Container\";\n\nexport {\n  Container\n};\n","// src/compact.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\n\nexport {\n  compact\n};\n"],"names":["SubFooter","_jsx","Box","as","bg","color","children","Container","maxW","py","className","display","_jsxs","Text","margin","Date","getFullYear","target","href","React","forwardRef","props","ref","styles","useStyleConfig","_omitThemingProps","omitThemingProps","rest","align","decoration","casing","_objectWithoutProperties","_excluded","aliasedProps","compact","textAlign","textDecoration","textTransform","jsx","chakra","p","_objectSpread","cx","__css","displayName","centerContent","div","flexDirection","alignItems","object","clone","Object","assign","key"],"sourceRoot":""}