{"version":3,"file":"static/js/760.cd1f87d7.chunk.js","mappings":"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","sources":["Components/Common/pagination.jsx","Components/Home/Categories/singleproduct.jsx","Components/Products/index.jsx"],"sourcesContent":["import { Box, Button } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nimport \"./common.css\";\r\n\r\nconst Pagination = ({\r\n    totalPosts,\r\n    postsPerPage,\r\n    setCurrentPage,\r\n    currentPage,\r\n}) => {\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n        pages.push(i);\r\n    }\r\n    return (\r\n        <Box className='pagination'>\r\n            {pages.map((page, index) => {\r\n                return (\r\n                    <Button\r\n                        key={index}\r\n                        onClick={() => setCurrentPage(page)}\r\n                        className={page == currentPage ? \"active\" : \"\"}>\r\n                        {page}\r\n                    </Button>\r\n                );\r\n            })}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default React.memo(Pagination);","import React from 'react';\r\nimport './index.css';\r\nimport {\r\n  Box,\r\n  // Container,\r\n  // Flex,\r\n  Heading,\r\n  // Input,\r\n  // InputGroup,\r\n  // InputRightAddon,\r\n  // Avatar,\r\n  // keyframes,\r\n  // SimpleGrid,\r\n  // Button,\r\n  Image,\r\n  // Icon,\r\n  Stack,\r\n  Text,\r\n  // useColorModeValue,\r\n} from '@chakra-ui/react';\r\n\r\nimport Appstore from '../../../Store/Appstore';\r\nimport { AiOutlineArrowRight, AiOutlineArrowDown } from 'react-icons/ai';\r\nimport { Link } from 'react-router-dom';\r\nconst SingleProductCard = React.memo(({ heading, description, icon, href ,referLink=false}) => {\r\n\r\n  return (\r\n    <>\r\n    {!referLink?\r\n    <Link to={href}>\r\n    <Box\r\n      maxW=\"200px\"\r\n      // w={'full'}\r\n      className=\"featueProductsCard1\"\r\n      // borderWidth=\"1px\"\r\n      borderRadius=\"6px\"\r\n      h={285}\r\n      w=\"219px\"\r\n      // h=\"236px\"\r\n      overflow=\"hidden\"\r\n      // p={5}\r\n    >\r\n      <Stack className='featueProductsCard1FirstBox'  p={4} background={`#F8FBFD`} rowGap={5}>\r\n        <Image loading=\"lazy\"\r\n          src={icon}\r\n          w=\"179px\"\r\n          height=\"196px\"\r\n          objectFit=\"contain\"\r\n          alt={heading}\r\n          borderRadius={0}\r\n          // className=\"featuredprocutsimage\"\r\n        />\r\n      </Stack>\r\n      <Box className=\"overlay\"></Box>\r\n      <Box className='featueProductsCard1SecondBox' mt={2}>\r\n        <Heading overflow={\"visible\"} height={\"auto\"} fontSize={18} fontWeight={600} size=\"md\">\r\n          {heading}\r\n        </Heading>\r\n      </Box>\r\n    </Box>\r\n    </Link>:\r\n    \r\n    <a href={href} target=\"_blank\">\r\n      <Box\r\n      maxW=\"200px\"\r\n      // w={'full'}\r\n      className=\"featueProductsCard1\"\r\n      // borderWidth=\"1px\"\r\n      borderRadius=\"6px\"\r\n      h={285}\r\n      w=\"219px\"\r\n      // h=\"236px\"\r\n      overflow=\"hidden\"\r\n      // p={5}\r\n    >\r\n      <Stack align={'center'} p={4} background={`#F8FBFD`} rowGap={5}>\r\n        <Image loading=\"lazy\"\r\n          src={icon}\r\n          w=\"179px\"\r\n          height=\"196px\"\r\n          objectFit=\"contain\"\r\n          alt={heading}\r\n          borderRadius={0}\r\n          // className=\"featuredprocutsimage\"\r\n        />\r\n        {/* <Button variant={'solid'} size={'md'}>\r\n          View Product\r\n        </Button> */}\r\n      </Stack>\r\n\r\n      <Box mt={2}>\r\n        <Heading fontSize={20} fontWeight={600} size=\"md\">\r\n          {heading}\r\n        </Heading>\r\n      </Box>\r\n    </Box>\r\n      </a>}\r\n    </>\r\n  );\r\n});\r\nconst CategoriesProductCard = React.memo(({ icon }) => {\r\n\r\n  return (\r\n    <Box\r\n      maxW=\"219px\"\r\n      // w={'full'}\r\n      className=\"featueProductsCard2\"\r\n      // borderWidth=\"1px\"\r\n      borderRadius=\"16px\"\r\n      w=\"219px\"\r\n      // h=\"236px\"\r\n      overflow=\"hidden\"\r\n      // p={5}\r\n    >\r\n      <Heading className=\"headerfeatureprod\">All Categories</Heading>\r\n      <Text className=\"textfeatureprod\">\r\n        View All{' '}\r\n        {Appstore.device ? <AiOutlineArrowRight /> : <AiOutlineArrowDown />}\r\n      </Text>\r\n      {/* <Stack align={'center'} p={5} background={`#F8FBFD`} rowGap={5}> */}\r\n      <Image loading=\"lazy\"\r\n        src={icon}\r\n        w=\"219px\"\r\n        height=\"284px\"\r\n        objectFit=\"contain\"\r\n        // alt={heading}\r\n        borderRadius={0}\r\n        // className=\"featuredprocutsimage\"\r\n      />\r\n      {/* <Button variant={'solid'} size={'md'}>\r\n          View Product\r\n        </Button> */}\r\n      {/* </Stack> */}\r\n\r\n      {/* <Box mt={2}> */}\r\n\r\n      {/* <Heading fontSize={20} fontWeight={600} size=\"md\">{heading}</Heading> */}\r\n      {/* </Box> */}\r\n    </Box>\r\n  );\r\n});\r\n\r\nexport { SingleProductCard, CategoriesProductCard };\r\n","import './index.css';\r\nimport { SingleProductCard } from '../Home/Categories/singleproduct';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Appstore from '../../Store/Appstore';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Box, Button, Heading, Skeleton } from '@chakra-ui/react';\r\nimport Pagination from '../Common/pagination';\r\nimport ProductsJSON from '../../Configs/JSON/returnProductDetails.json';\r\n\r\nconst MainProducts = () => {\r\n  const { id, name } = useParams();\r\n  const [cpage, setCpage] = useState(1);\r\n  const postsPerPage = 12;\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [cpage, name]);\r\n\r\n  const FilterResult = ProductsJSON.data.filter((e) => e.catid === id);\r\n\r\n  const getPaginatedProducts = () => {\r\n    const lastposti = cpage * postsPerPage;\r\n    const firstposti = lastposti - postsPerPage;\r\n    return FilterResult.slice(firstposti, lastposti);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      className=\"mainProductsMain\"\r\n      as=\"section\"\r\n      p={'20px'}\r\n      flexDirection={'column'}\r\n      maxW={'1220px'}\r\n      m={'auto'}\r\n      mt={'100px'}\r\n    >\r\n      <Link className=\"goBackMain\" to={`/`}>\r\n        <Button loadingText={'Loading'} isLoading={!FilterResult}>\r\n          Go Back\r\n        </Button>\r\n      </Link>\r\n      <Heading textAlign={'center'}>\r\n        {FilterResult ? name : `Loading ${name}`}\r\n      </Heading>\r\n\r\n      {FilterResult && FilterResult.length !== 0 ? (\r\n        <Box\r\n          display={'flex'}\r\n          gap={'30px'}\r\n          flexWrap={'wrap'}\r\n          justifyContent={'space-around'}\r\n          alignItems={'center'}\r\n        >\r\n          {getPaginatedProducts().map((e) => (\r\n            <SingleProductCard\r\n              key={e.showcaseid}\r\n              heading={e.pro_name ? e.pro_name : 'LoudSpeaker'}\r\n              icon={`${Appstore.imageLink}/${e.pro_image}`}\r\n              href={`/productDetails/${e.catid}/${e.showcaseid}/${e.pro_name}/${name}`}\r\n            />\r\n          ))}\r\n        </Box>\r\n      ) : (\r\n        <Skeleton height={650} width=\"100%\" />\r\n      )}\r\n\r\n      {FilterResult && FilterResult.length !== 0 ? (\r\n        <Pagination\r\n          totalPosts={FilterResult.length}\r\n          postsPerPage={postsPerPage}\r\n          setCurrentPage={setCpage}\r\n          currentPage={cpage}\r\n        />\r\n      ) : (\r\n        <Skeleton height={50} width=\"100%\" />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(MainProducts);\r\n"],"names":["Pagination","_ref","totalPosts","postsPerPage","setCurrentPage","currentPage","pages","i","Math","ceil","push","_jsx","Box","className","children","map","page","index","Button","onClick","React","SingleProductCard","heading","icon","description","href","_ref$referLink","referLink","_Fragment","target","_jsxs","maxW","borderRadius","h","w","overflow","Stack","align","p","background","rowGap","Image","loading","src","height","objectFit","alt","mt","Heading","fontSize","fontWeight","size","Link","to","CategoriesProductCard","_ref2","Text","Appstore","device","AiOutlineArrowRight","AiOutlineArrowDown","MainProducts","_useParams","useParams","id","name","_useState","useState","_useState2","_slicedToArray","cpage","setCpage","useEffect","window","scrollTo","FilterResult","ProductsJSON","filter","e","catid","as","flexDirection","m","loadingText","isLoading","textAlign","concat","length","display","gap","flexWrap","justifyContent","alignItems","lastposti","firstposti","slice","getPaginatedProducts","pro_name","imageLink","pro_image","showcaseid","Skeleton","width"],"sourceRoot":""}