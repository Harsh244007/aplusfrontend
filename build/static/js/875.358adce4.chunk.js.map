{"version":3,"file":"static/js/875.358adce4.chunk.js","mappings":"s0CA0BMA,GAAaC,EAAAA,EAAAA,KAAS,SAAAC,GAAkB,IAAfC,EAAOD,EAAPC,QACvBC,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,UAAQ,WACvB,OAAOC,EAAAA,EAAoBC,KAAI,SAAAC,GAAC,MAAK,CACnCC,QAASD,EAAEE,QACXC,QAAQ,WAAD,IAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,EAAOC,GAAK,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACbpB,IAAU,KAAD,EACfC,EAAS,aAADoB,OAAcd,EAAEe,MAAK,KAAAD,OAAId,EAAEE,UAAW,wBAAAS,EAAAK,OAAA,GAAAR,EAAA,KAC/C,gBAAAS,GAAA,OAAAb,EAAAc,MAAA,KAAAC,UAAA,EAHO,GAIT,GACH,GAAG,CAAC1B,EAASC,IAEb,OACE0B,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,GAAG,MAAKC,SAAA,EACbC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,IAAIvB,QAAS,kBAAMV,GAAS,EAAC8B,SAAC,UAIvCC,EAAAA,EAAAA,KAACG,EAAAA,EAAQ,CACPC,QAAShC,EACTiC,QAAS,IACTC,qBAAqB,EACrBC,KAAM,EACNC,MAAM,cAERR,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CACHC,GAAG,YACHvB,QAAS,WAEPV,GACF,EAAE8B,SACH,WAKDC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CACHC,GAAG,iBACHvB,QAAS,WAEPV,GACF,EAAE8B,SACH,uBAIDC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CACHC,GAAG,WACHvB,QAAS,WAEPV,GACF,EAAE8B,SACH,iBAKP,IAEMU,EAAa,WACjB,IAAAC,GAAoCC,EAAAA,EAAAA,KAA5BC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQ5C,EAAOyC,EAAPzC,QAClB6C,EAASC,EAAAA,SAEf,OACEnB,EAAAA,EAAAA,MAAAoB,EAAAA,SAAA,CAAAjB,SAAA,EACEC,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CACLC,IAAKJ,EACLK,gBAAgB,QAChBC,SAAS,OACTC,QAAQ,MACR1C,QAASkC,EAAOd,UAEhBC,EAAAA,EAAAA,KAACsB,EAAAA,IAAa,OAEhBtB,EAAAA,EAAAA,KAACuB,EAAAA,EAAM,CACLX,OAAQA,EACR3C,QAASA,EACTuD,UAAU,MACVC,cAAeX,EAAOf,UAEtBC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAa,CAACC,UAAU,cAAa5B,UACpCH,EAAAA,EAAAA,MAACgC,EAAAA,EAAa,CAACD,UAAU,mBAAkB5B,SAAA,EACzCC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAiB,KAClB7B,EAAAA,EAAAA,KAAC8B,EAAAA,EAAY,CAAA/B,SAAC,UACdC,EAAAA,EAAAA,KAAC+B,EAAAA,EAAU,CAAAhC,UACTC,EAAAA,EAAAA,KAAClC,EAAU,CAAC6D,UAAU,cAAc1D,QAASA,eAO3D,EAEM+D,EAAiB,SAAHC,GAAcA,EAARlC,SACxB,OACEC,EAAAA,EAAAA,KAACH,EAAAA,EAAK,CAAAE,UACJC,EAAAA,EAAAA,KAACkC,EAAAA,EAAM,CAAAnC,UACLC,EAAAA,EAAAA,KAACmC,EAAAA,GAAG,CAAApC,UACFC,EAAAA,EAAAA,KAACS,EAAU,SAKrB,EAEM2B,EAAiB,WACrB,OAAOpC,EAAAA,EAAAA,KAACgC,EAAc,GACxB,EAEAI,EAAeC,cAAgB,OAE/B,MAAetB,EAAAA,KAAWqB,GCrF1B,GA/CwBrE,EAAAA,EAAAA,KAAS,WAC/B,IAAAuE,GAA4BC,EAAAA,EAAAA,WAAS,GAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAClBtE,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,UAAQ,WACvB,OAAOC,EAAAA,EAAoBC,KAAI,SAAAC,GAAC,MAAK,CACnCC,QAASD,EAAEE,QACXC,QAAS,WACPgE,GAAU,SAAAnE,GAAC,OAAI,CAAK,IACpBoE,WACED,GAAU,SAAAnE,GAAC,OAAI,CAAI,IACnB,KAGFN,EAAS,aAADoB,OAAcd,EAAEe,MAAK,KAAAD,OAAId,EAAEE,SACrC,EACD,GACH,GAAG,CAACR,EAAUwE,IACd,OACE9C,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CACJgD,UAAU,MACVC,EAAE,YACFC,IAAK,EACLC,eAAe,eACfC,MAAM,SAAQlD,SAAA,EAEdC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,IAAGH,UACVC,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CAACiC,QAAQ,QAAOnD,SAAC,YAE1BC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,YAAWH,UAClBC,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CAACiC,QAAQ,QAAOnD,SAAC,aAEd,IAAX2C,GACC1C,EAAAA,EAAAA,KAACG,EAAAA,EAAQ,CAACC,QAAShC,EAAUiC,QAAS,GAAIE,KAAM,EAAGC,MAAM,aAEzD,IAEFR,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,iBAAgBH,UACvBC,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CAACiC,QAAQ,QAAOnD,SAAC,yBAE1BC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,WAAUH,UACjBC,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CAACiC,QAAQ,QAAOnD,SAAC,gBAIhC,I,2FClCMoD,GAASpF,EAAAA,EAAAA,KAAS,SAAAC,GAAoBA,EAAjBoF,GAAkB,IACnCC,GAAcC,EAAAA,EAAAA,MAAdD,UACRf,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CiB,EAAWf,EAAA,GAAEgB,EAAchB,EAAA,GAClCiB,GAA0ClB,EAAAA,EAAAA,UAAS,IAAGmB,GAAAjB,EAAAA,EAAAA,GAAAgB,EAAA,GAA/CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAatC,OACE1D,EAAAA,EAAAA,KAACmC,EAAAA,GAAG,CACFR,UAAS,cAAArC,QACPuE,EAAAA,EAASC,OAAe,gBAE1BhE,GAAG,UAASC,UAEZH,EAAAA,EAAAA,MAACuC,EAAAA,GAAG,CAACR,UAAU,SAASoC,UAAU,SAAQhE,SAAA,EACxCC,EAAAA,EAAAA,KAACgE,EAAU,CAACX,UAAWA,EAAWY,KAAMC,IACvCL,EAAAA,EAASM,QACRnE,EAAAA,EAAAA,KAACmC,EAAAA,GAAG,CACFiC,QAAQ,OACRzC,UAAU,mBACV0C,QAAS,MACTtB,IAAK,GAAGhD,UAERC,EAAAA,EAAAA,KAACmC,EAAAA,GAAG,CAACR,UAAU,gBAAe5B,UAC5BC,EAAAA,EAAAA,KAACoC,EAAc,SAInBxC,EAAAA,EAAAA,MAAAoB,EAAAA,SAAA,CAAAjB,SAAA,EACEC,EAAAA,EAAAA,KAACsE,EAAe,KAChBtE,EAAAA,EAAAA,KAACuE,EAAQ,CACPhB,YAAaA,EACbI,cAAeA,EACfa,wBArCoB,SAAAvF,GAC9B,IAAMwF,EAAQxF,EAAMyF,OAAOlE,MAC3BgD,GAAe,kBAAMiB,CAAK,IAE1B,IAAME,EAAkBC,EAAAA,EAAsBC,QAAO,SAAAC,GAAI,OACvDA,EAAKC,SAASC,cAAcC,SAASR,EAAMO,cAAc,IAG3DpB,EAAiBe,EACnB,WAmCF,IAEA,SAASJ,EAAQtC,GAA2D,IAAxDsB,EAAWtB,EAAXsB,YAAaiB,EAAuBvC,EAAvBuC,wBAAyBb,EAAa1B,EAAb0B,cACxD,OACE/D,EAAAA,EAAAA,MAACsF,EAAAA,EAAU,CAACvD,UAAU,wBAAwBwD,KAAK,KAAIpF,SAAA,EACrDC,EAAAA,EAAAA,KAACoF,EAAAA,EAAK,CACJC,GAAG,QACH1D,UAAU,oBACV2D,KAAM,OACNC,EAAG,QACHC,YAAY,SACZhF,MAAO+C,EACPkC,SAAUjB,KAEZxE,EAAAA,EAAAA,KAAC0F,EAAAA,EAAiB,CAACC,aAAc,MAAOC,MAAO,MAAM7F,UACnDC,EAAAA,EAAAA,KAAC6F,EAAAA,IAAQ,CAAClE,UAAU,4BAErB4B,EAAYuC,OAAS,IACpB9F,EAAAA,EAAAA,KAAC+F,EAAa,CAACvF,MAAO+C,EAAayC,QAASrC,MAIpD,CAEA,SAASoC,EAAaE,GAAsB,IAAnBD,EAAOC,EAAPD,QAASxF,EAAKyF,EAALzF,MAChC,OACER,EAAAA,EAAAA,KAAA,OACE2B,UAAU,iBACVuE,MAAO,CAAEC,UAAW,QAAQC,UAAW,OAAQC,UAAW,QAAStG,SAExD,KAAVS,GAAmC,IAAnBwF,EAAQF,QACvB9F,EAAAA,EAAAA,KAAA,OAAAD,SAAK,qBAELiG,EAAQzH,KAAI,SAAA+H,GAAM,OAChBtG,EAAAA,EAAAA,KAAA,OAAAD,UACEH,EAAAA,EAAAA,MAACK,EAAAA,GAAI,CAACC,GAAE,YAAAZ,OAAcgH,EAAOC,IAAKxG,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OACEwG,IAAG,GAAAlH,OAAKuE,EAAAA,EAAS4C,UAAS,KAAAnH,OAAIgH,EAAOI,WACrCC,IAAKL,EAAOvB,YAEd/E,EAAAA,EAAAA,KAAA,KAAAD,SAAIuG,EAAOvB,eANLuB,EAAOC,GAQX,KAKhB,CAEA,MAAexF,EAAAA,KAAWoC,GAE1B,SAASa,EAAU4C,GAAYA,EAATvD,UAAoB,IAATY,EAAI2C,EAAJ3C,KAC/B,OACEjE,EAAAA,EAAAA,KAACmC,EAAAA,GAAG,CAACR,UAAU,YAAW5B,UACxBC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,IAAGH,UACVC,EAAAA,EAAAA,KAAC6G,EAAAA,EAAK,CAACC,QAAQ,OAAON,IAAKvC,EAAM0C,IAAI,oBAI7C,C","sources":["Components/Header/dropdown.jsx","Components/Header/desktopdropdown.jsx","Components/Header/index.jsx"],"sourcesContent":["import React, { FC, startTransition } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerCloseButton,\r\n  DrawerContent,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  // Heading,\r\n  HStack,\r\n  // LinkProps,\r\n  Stack,\r\n  useDisclosure,\r\n} from '@chakra-ui/react';\r\nimport CategoriesJSON from '../../Configs/JSON/categories.json';\r\nimport { AiOutlineMenu } from 'react-icons/ai';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport './index.css';\r\n\r\nimport Dropdown from 'react-dropdown-animated';\r\n// import Appstore from '../../Store/Appstore';\r\nimport { observer } from 'mobx-react';\r\nimport { useMemo } from 'react';\r\n\r\nconst Navigation = observer(({ onClose }) => {\r\n  const navigate = useNavigate();\r\n\r\n  const options2 = useMemo(() => {\r\n    return CategoriesJSON.data.map(e => ({\r\n      content: e.catname,\r\n      onClick: async (event) => {\r\n        await onClose();\r\n        navigate(`/products/${e.catid}/${e.catname}`);\r\n      },\r\n    }));\r\n  }, [onClose, navigate]);\r\n\r\n  return (\r\n    <Stack as=\"nav\">\r\n      <Link to=\"/\" onClick={() => onClose()}>\r\n        Home\r\n      </Link>\r\n\r\n      <Dropdown\r\n        options={options2}\r\n        initial={200}\r\n        closeOnOutsideClick={true}\r\n        exit={4}\r\n        value=\"Products\"\r\n      />\r\n      <Link\r\n        to=\"/about-us\"\r\n        onClick={() => {\r\n          // Appstore.setLogin(true);\r\n          onClose();\r\n        }}\r\n      >\r\n        About\r\n      </Link>\r\n      \r\n     \r\n      <Link\r\n        to=\"/participation\"\r\n        onClick={() => {\r\n          // Appstore.setLogin(true);\r\n          onClose();\r\n        }}\r\n      >\r\n        Our Participation\r\n      </Link>\r\n\r\n      <Link\r\n        to=\"/contact\"\r\n        onClick={() => {\r\n          // Appstore.setLogin(true);\r\n          onClose();\r\n        }}\r\n      >\r\n        Contact us\r\n      </Link>\r\n    </Stack>\r\n  );\r\n});\r\n\r\nconst DrawerMenu = () => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const btnRef = React.useRef();\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        ref={btnRef}\r\n        backgroundColor=\"unset\"\r\n        fontSize=\"28px\"\r\n        padding=\"5px\"\r\n        onClick={onOpen}\r\n      >\r\n        <AiOutlineMenu />\r\n      </Button>\r\n      <Drawer\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n        placement=\"top\"\r\n        finalFocusRef={btnRef}\r\n      >\r\n        <DrawerOverlay className=\"headerModal\">\r\n          <DrawerContent className=\"mainHeaderDrawer\">\r\n            <DrawerCloseButton />\r\n            <DrawerHeader>Menu</DrawerHeader>\r\n            <DrawerBody>\r\n              <Navigation className=\"dropdownNav\" onClose={onClose} />\r\n            </DrawerBody>\r\n          </DrawerContent>\r\n        </DrawerOverlay>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nconst LayoutWithMenu = ({ children }) => {\r\n  return (\r\n    <Stack>\r\n      <HStack>\r\n        <Box>\r\n          <DrawerMenu />\r\n        </Box>\r\n      </HStack>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst DropdownMobile = () => {\r\n  return <LayoutWithMenu></LayoutWithMenu>;\r\n};\r\n\r\nDropdownMobile.containerSize = 'fill';\r\n\r\nexport default React.memo(DropdownMobile);\r\n","import { Button, Stack } from '@chakra-ui/react';\r\nimport { observer } from 'mobx-react';\r\nimport React, { useState, useMemo } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport Dropdown from 'react-dropdown-animated';\r\nimport CategoriesJSON from '../../Configs/JSON/categories.json';\r\n\r\nconst DesktopDropdown = observer(() => {\r\n  const [showDD, setShowDD] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  const options2 = useMemo(() => {\r\n    return CategoriesJSON.data.map(e => ({\r\n      content: e.catname,\r\n      onClick: () => {\r\n        setShowDD(e => false);\r\n        setTimeout(\r\n          setShowDD(e => true),\r\n          1000\r\n        );\r\n        // setShowDD(e=>!e)\r\n        navigate(`/products/${e.catid}/${e.catname}`);\r\n      },\r\n    }));\r\n  }, [navigate, showDD]);\r\n  return (\r\n    <Stack\r\n      direction=\"row\"\r\n      m=\"10px 10px\"\r\n      gap={2}\r\n      justifyContent=\"space-around\"\r\n      align=\"center\"\r\n    >\r\n      <Link to=\"/\">\r\n        <Button variant=\"ghost\">Home</Button>\r\n      </Link>\r\n      <Link to=\"/about-us\">\r\n        <Button variant=\"ghost\">About</Button>\r\n      </Link>\r\n      {showDD === true ? (\r\n        <Dropdown options={options2} initial={50} exit={4} value=\"Products\" />\r\n      ) : (\r\n        ''\r\n      )}\r\n      <Link to=\"/participation\">\r\n        <Button variant=\"ghost\">Our Participation</Button>\r\n      </Link>\r\n      <Link to=\"/contact\">\r\n        <Button variant=\"ghost\">Contact</Button>\r\n      </Link>\r\n    </Stack>\r\n  );\r\n});\r\n\r\nexport default DesktopDropdown;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Image,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  useColorMode,\r\n} from '@chakra-ui/react';\r\nimport './index.css';\r\nimport Appstore from '../../Store/Appstore';\r\nimport DropdownMobile from './dropdown';\r\nimport { observer } from 'mobx-react';\r\nimport Desktopdropdown from './desktopdropdown';\r\nimport { Link } from 'react-router-dom';\r\nimport logomain from '../../assets/Aplus-logo-675x324-white.png';\r\nimport { CiSearch } from 'react-icons/ci';\r\nimport ReturnCategories from '../../Configs/JSON/returnProductDetails.json';\r\nconst Header = observer(({ BG = false }) => {\r\n  const { colorMode } = useColorMode();\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  const handleSearchInputChange = event => {\r\n    const query = event.target.value;\r\n    setSearchQuery(() => query);\r\n\r\n    const filteredResults = ReturnCategories.data.filter(item =>\r\n      item.pro_name.toLowerCase().includes(query.toLowerCase())\r\n    );\r\n\r\n    setSearchResults(filteredResults);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      className={`mainHeader ${\r\n        Appstore.footer || BG ? 'mainHeader2' : 'mainHeader2'\r\n      }`}\r\n      as=\"section\"\r\n    >\r\n      <Box className=\"header\" textAlign=\"center\">\r\n        <HeaderLogo colorMode={colorMode} Logo={logomain} />\r\n        {Appstore.device ? (\r\n          <Box\r\n            display=\"flex\"\r\n            className=\"headerSecondPart\"\r\n            flexDir={'row'}\r\n            gap={15}\r\n          >\r\n            <Box className=\"desktopSlider\">\r\n              <DropdownMobile />\r\n            </Box>\r\n          </Box>\r\n        ) : (\r\n          <>\r\n            <Desktopdropdown />\r\n            <InputBox\r\n              searchQuery={searchQuery}\r\n              searchResults={searchResults}\r\n              handleSearchInputChange={handleSearchInputChange}\r\n            />\r\n          </>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n});\r\n\r\nfunction InputBox({ searchQuery, handleSearchInputChange, searchResults }) {\r\n  return (\r\n    <InputGroup className=\"inputheaderSearchMain\" size=\"xl\">\r\n      <Input\r\n        pr=\".5rem\"\r\n        className=\"inputheaderSearch\"\r\n        type={'text'}\r\n        w={'230px'}\r\n        placeholder=\"Search\"\r\n        value={searchQuery}\r\n        onChange={handleSearchInputChange}\r\n      />\r\n      <InputRightElement marginBottom={'6px'} right={'6px'}>\r\n        <CiSearch className=\"inputheaderSearchIcon\" />\r\n      </InputRightElement>\r\n      {searchQuery.length > 0 && (\r\n        <SearchResults value={searchQuery} results={searchResults} />\r\n      )}\r\n    </InputGroup>\r\n  );\r\n}\r\n\r\nfunction SearchResults({ results, value }) {\r\n  return (\r\n    <div\r\n      className=\"search-results\"\r\n      style={{ maxHeight: '400px',minHeight: '40px', overflowY: 'auto' }}\r\n    >\r\n      {value !== '' && results.length === 0 ? (\r\n        <div>No Results found</div>\r\n      ) : (\r\n        results.map(result => (\r\n          <div key={result.id}>\r\n            <Link to={`/product/${result.id}`}>\r\n              <img\r\n                src={`${Appstore.imageLink}/${result.pro_image}`}\r\n                alt={result.pro_name}\r\n              />\r\n              <p>{result.pro_name}</p>\r\n            </Link>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Header);\r\n\r\nfunction HeaderLogo({ colorMode, Logo }) {\r\n  return (\r\n    <Box className=\"titleText\">\r\n      <Link to=\"/\">\r\n        <Image loading=\"lazy\" src={Logo} alt=\"Aplus Audios\" />\r\n      </Link>\r\n    </Box>\r\n  );\r\n}\r\n"],"names":["Navigation","observer","_ref","onClose","navigate","useNavigate","options2","useMemo","CategoriesJSON","map","e","content","catname","onClick","_onClick","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","wrap","_context","prev","next","concat","catid","stop","_x","apply","arguments","_jsxs","Stack","as","children","_jsx","Link","to","Dropdown","options","initial","closeOnOutsideClick","exit","value","DrawerMenu","_useDisclosure","useDisclosure","isOpen","onOpen","btnRef","React","_Fragment","Button","ref","backgroundColor","fontSize","padding","AiOutlineMenu","Drawer","placement","finalFocusRef","DrawerOverlay","className","DrawerContent","DrawerCloseButton","DrawerHeader","DrawerBody","LayoutWithMenu","_ref2","HStack","Box","DropdownMobile","containerSize","_useState","useState","_useState2","_slicedToArray","showDD","setShowDD","setTimeout","direction","m","gap","justifyContent","align","variant","Header","BG","colorMode","useColorMode","searchQuery","setSearchQuery","_useState3","_useState4","searchResults","setSearchResults","Appstore","footer","textAlign","HeaderLogo","Logo","logomain","device","display","flexDir","Desktopdropdown","InputBox","handleSearchInputChange","query","target","filteredResults","ReturnCategories","filter","item","pro_name","toLowerCase","includes","InputGroup","size","Input","pr","type","w","placeholder","onChange","InputRightElement","marginBottom","right","CiSearch","length","SearchResults","results","_ref3","style","maxHeight","minHeight","overflowY","result","id","src","imageLink","pro_image","alt","_ref4","Image","loading"],"sourceRoot":""}