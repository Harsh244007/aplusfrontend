{"version":3,"file":"static/js/760.bd65360b.chunk.js","mappings":"4UAwBMA,EAAoBC,EAAAA,MAAW,SAAAC,GAA2D,IAAxDC,EAAOD,EAAPC,QAAsBC,GAAFF,EAAXG,YAAiBH,EAAJE,MAAME,EAAIJ,EAAJI,KAAIC,EAAAL,EAAEM,UAAAA,OAAS,IAAAD,GAAMA,EAEvF,OACEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACEH,GAkCFC,EAAAA,EAAAA,KAAA,KAAGH,KAAMA,EAAMM,OAAO,SAAQD,UAC5BE,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CACJC,KAAK,QAELC,UAAU,sBAEVC,aAAa,MACbC,EAAG,IACHC,EAAE,QAEFC,SAAS,SACTT,SAAA,EAEAF,EAAAA,EAAAA,KAACY,EAAAA,EAAK,CAACC,MAAO,SAAUC,EAAG,EAAGC,WAAU,UAAaC,OAAQ,EAAEd,UAC7DF,EAAAA,EAAAA,KAACiB,EAAAA,EAAK,CAACC,QAAQ,OACbC,IAAKxB,EACLe,EAAE,QACFU,OAAO,QACPC,UAAU,UACVC,IAAK5B,EACLc,aAAc,OAQlBR,EAAAA,EAAAA,KAACK,EAAAA,GAAG,CAACkB,GAAI,EAAErB,UACTF,EAAAA,EAAAA,KAACwB,EAAAA,EAAO,CAACC,SAAU,GAAIC,WAAY,IAAKC,KAAK,KAAIzB,SAC9CR,YA/DPM,EAAAA,EAAAA,KAAC4B,EAAAA,GAAI,CAACC,GAAIhC,EAAKK,UACfE,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CACFC,KAAK,QAELC,UAAU,sBAEVC,aAAa,MACbC,EAAG,IACHC,EAAE,QAEFC,SAAS,SACTT,SAAA,EAEAF,EAAAA,EAAAA,KAACY,EAAAA,EAAK,CAACL,UAAU,8BAA+BO,EAAG,EAAGC,WAAU,UAAaC,OAAQ,EAAEd,UACrFF,EAAAA,EAAAA,KAACiB,EAAAA,EAAK,CAACC,QAAQ,OACbC,IAAKxB,EACLe,EAAE,QACFU,OAAO,QACPC,UAAU,UACVC,IAAK5B,EACLc,aAAc,OAIlBR,EAAAA,EAAAA,KAACK,EAAAA,GAAG,CAACE,UAAU,aACfP,EAAAA,EAAAA,KAACK,EAAAA,GAAG,CAACE,UAAU,+BAA+BgB,GAAI,EAAErB,UAClDF,EAAAA,EAAAA,KAACwB,EAAAA,EAAO,CAACb,SAAU,UAAWS,OAAQ,OAAQK,SAAU,GAAIC,WAAY,IAAKC,KAAK,KAAIzB,SACnFR,YA2CX,IACMoC,EAAwBtC,EAAAA,MAAW,SAAAuC,GAAe,IAAZpC,EAAIoC,EAAJpC,KAE1C,OACES,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CACFC,KAAK,QAELC,UAAU,sBAEVC,aAAa,OACbE,EAAE,QAEFC,SAAS,SACTT,SAAA,EAEAF,EAAAA,EAAAA,KAACwB,EAAAA,EAAO,CAACjB,UAAU,oBAAmBL,SAAC,oBACvCE,EAAAA,EAAAA,MAAC4B,EAAAA,EAAI,CAACzB,UAAU,kBAAiBL,SAAA,CAAC,WACvB,IACR+B,EAAAA,EAASC,QAASlC,EAAAA,EAAAA,KAACmC,EAAAA,IAAmB,KAAMnC,EAAAA,EAAAA,KAACoC,EAAAA,IAAkB,QAGlEpC,EAAAA,EAAAA,KAACiB,EAAAA,EAAK,CAACC,QAAQ,OACbC,IAAKxB,EACLe,EAAE,QACFU,OAAO,QACPC,UAAU,UAEVb,aAAc,MActB,G,6NClIM6B,EAAe,WAInB,IAwBMC,EAxBNC,GAAmBC,EAAAA,EAAAA,MAAbC,EAAEF,EAAFE,GAAIC,EAAIH,EAAJG,KAEJC,EAAG,GAAAC,OAAMX,EAAAA,EAASY,QAAO,oBAAAD,OAAmBH,GAClDK,GASIC,EAAAA,EAAAA,UAAS,CAAC,0BAAwBC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAG,OAAA,SAC/BC,EAAAA,EAAMC,IAAIf,GAAKgB,MAAK,SAAAC,GACzB,OAAOA,EAASC,KAAKA,IACvB,KAAE,wBAAAR,EAAAS,OAAA,GAAAX,EAAA,MAXFU,EAAIf,EAAJe,KACAE,EAAMjB,EAANiB,OACAC,EAAOlB,EAAPkB,QACAC,EAAYnB,EAAZmB,aACAC,EAAMpB,EAANoB,OACAC,EAAcrB,EAAdqB,eACAC,EAAmBtB,EAAnBsB,oBACAC,EAASvB,EAATuB,YAMFC,EAAAA,EAAAA,YAAU,WAERN,IACAO,OAAOC,SAAS,EAAG,EAErB,GAAG,CAAC9B,EAAMsB,IACLH,KAEHY,aAAanC,GACbA,EAAQoC,YAAW,WACjBV,GACF,GAAG,OAELM,EAAAA,EAAAA,YAAU,WACJT,GAAwB,IAAhBA,EAAKc,QAAcX,GACjC,GAAE,CAACH,IAEHe,QAAQC,IAAIR,EAAWN,EAAQ,2BAC1BtB,IACHA,EAAK,eAEP,IAAAqC,GAA0BC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9BI,EAAKF,EAAA,GAENG,GAFgBH,EAAA,GACD,GACHE,GACZE,EAAaD,EAFE,GAmBrB,OAfItB,GACaA,EAAKwB,MAAMD,EAAYD,IAGxCb,EAAAA,EAAAA,YAAU,WACRC,OAAOC,SAAS,EAAG,EACrB,GAAG,CAACU,IACJN,QAAQC,IACNZ,EACAE,EACAJ,EACAG,EACAE,EACA,0BAGAhE,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CACFE,UAAU,mBACV+E,GAAG,UACHxE,EAAG,OACHyE,cAAe,SACfjF,KAAM,SACNkF,EAAG,OACHjE,GAAI,QACJrB,SAAA,EAEAF,EAAAA,EAAAA,KAAC4B,EAAAA,GAAI,CAACrB,UAAU,aAAasB,GAAE,IAAM3B,UACnCF,EAAAA,EAAAA,KAACyF,EAAAA,EAAM,CACLC,YAAa,UACbrB,YAAWR,IAASI,GAA4B/D,SACjD,eAIHF,EAAAA,EAAAA,KAACwB,EAAAA,EAAO,CAACmE,UAAW,SAASzF,SAAE2D,EAAOnB,EAAI,WAAAE,OAAcF,MAyB9D1C,EAAAA,EAAAA,KAAA,MAAI4F,MAAO,CAACC,OAAO,OAAOpE,SAAS,QAAQvB,SAAC,sCAc5C,EACA,EAAeV,EAAAA,KAAW6C,E","sources":["Components/Home/Categories/singleproduct.jsx","Components/Products/index.jsx"],"sourcesContent":["import React from 'react';\r\nimport './index.css';\r\nimport {\r\n  Box,\r\n  // Container,\r\n  // Flex,\r\n  Heading,\r\n  // Input,\r\n  // InputGroup,\r\n  // InputRightAddon,\r\n  // Avatar,\r\n  // keyframes,\r\n  // SimpleGrid,\r\n  // Button,\r\n  Image,\r\n  // Icon,\r\n  Stack,\r\n  Text,\r\n  // useColorModeValue,\r\n} from '@chakra-ui/react';\r\n\r\nimport Appstore from '../../../Store/Appstore';\r\nimport { AiOutlineArrowRight, AiOutlineArrowDown } from 'react-icons/ai';\r\nimport { Link } from 'react-router-dom';\r\nconst SingleProductCard = React.memo(({ heading, description, icon, href ,referLink=false}) => {\r\n\r\n  return (\r\n    <>\r\n    {!referLink?\r\n    <Link to={href}>\r\n    <Box\r\n      maxW=\"200px\"\r\n      // w={'full'}\r\n      className=\"featueProductsCard1\"\r\n      // borderWidth=\"1px\"\r\n      borderRadius=\"6px\"\r\n      h={285}\r\n      w=\"219px\"\r\n      // h=\"236px\"\r\n      overflow=\"hidden\"\r\n      // p={5}\r\n    >\r\n      <Stack className='featueProductsCard1FirstBox'  p={4} background={`#F8FBFD`} rowGap={5}>\r\n        <Image loading=\"lazy\"\r\n          src={icon}\r\n          w=\"179px\"\r\n          height=\"196px\"\r\n          objectFit=\"contain\"\r\n          alt={heading}\r\n          borderRadius={0}\r\n          // className=\"featuredprocutsimage\"\r\n        />\r\n      </Stack>\r\n      <Box className=\"overlay\"></Box>\r\n      <Box className='featueProductsCard1SecondBox' mt={2}>\r\n        <Heading overflow={\"visible\"} height={\"auto\"} fontSize={18} fontWeight={600} size=\"md\">\r\n          {heading}\r\n        </Heading>\r\n      </Box>\r\n    </Box>\r\n    </Link>:\r\n    \r\n    <a href={href} target=\"_blank\">\r\n      <Box\r\n      maxW=\"200px\"\r\n      // w={'full'}\r\n      className=\"featueProductsCard1\"\r\n      // borderWidth=\"1px\"\r\n      borderRadius=\"6px\"\r\n      h={285}\r\n      w=\"219px\"\r\n      // h=\"236px\"\r\n      overflow=\"hidden\"\r\n      // p={5}\r\n    >\r\n      <Stack align={'center'} p={4} background={`#F8FBFD`} rowGap={5}>\r\n        <Image loading=\"lazy\"\r\n          src={icon}\r\n          w=\"179px\"\r\n          height=\"196px\"\r\n          objectFit=\"contain\"\r\n          alt={heading}\r\n          borderRadius={0}\r\n          // className=\"featuredprocutsimage\"\r\n        />\r\n        {/* <Button variant={'solid'} size={'md'}>\r\n          View Product\r\n        </Button> */}\r\n      </Stack>\r\n\r\n      <Box mt={2}>\r\n        <Heading fontSize={20} fontWeight={600} size=\"md\">\r\n          {heading}\r\n        </Heading>\r\n      </Box>\r\n    </Box>\r\n      </a>}\r\n    </>\r\n  );\r\n});\r\nconst CategoriesProductCard = React.memo(({ icon }) => {\r\n\r\n  return (\r\n    <Box\r\n      maxW=\"219px\"\r\n      // w={'full'}\r\n      className=\"featueProductsCard2\"\r\n      // borderWidth=\"1px\"\r\n      borderRadius=\"16px\"\r\n      w=\"219px\"\r\n      // h=\"236px\"\r\n      overflow=\"hidden\"\r\n      // p={5}\r\n    >\r\n      <Heading className=\"headerfeatureprod\">All Categories</Heading>\r\n      <Text className=\"textfeatureprod\">\r\n        View All{' '}\r\n        {Appstore.device ? <AiOutlineArrowRight /> : <AiOutlineArrowDown />}\r\n      </Text>\r\n      {/* <Stack align={'center'} p={5} background={`#F8FBFD`} rowGap={5}> */}\r\n      <Image loading=\"lazy\"\r\n        src={icon}\r\n        w=\"219px\"\r\n        height=\"284px\"\r\n        objectFit=\"contain\"\r\n        // alt={heading}\r\n        borderRadius={0}\r\n        // className=\"featuredprocutsimage\"\r\n      />\r\n      {/* <Button variant={'solid'} size={'md'}>\r\n          View Product\r\n        </Button> */}\r\n      {/* </Stack> */}\r\n\r\n      {/* <Box mt={2}> */}\r\n\r\n      {/* <Heading fontSize={20} fontWeight={600} size=\"md\">{heading}</Heading> */}\r\n      {/* </Box> */}\r\n    </Box>\r\n  );\r\n});\r\n\r\nexport { SingleProductCard, CategoriesProductCard };\r\n","import React, { useEffect } from 'react';\r\nimport './index.css';\r\nimport { Box, Button, Heading, Skeleton } from '@chakra-ui/react';\r\nimport { SingleProductCard } from '../Home/Categories/singleproduct';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useQuery } from 'react-query';\r\nimport axios from 'axios';\r\nimport Appstore from '../../Store/Appstore';\r\nimport Pagination from '../Common/pagination';\r\nimport { useState } from 'react';\r\nconst MainProducts = () => {\r\n  //   const [state, updateState] = React.useState();\r\n  // const forceUpdate = React.useCallback(() => updateState({}), []);\r\n\r\n  let { id, name } = useParams();\r\n\r\n  const url = `${Appstore.apilink}/returncategory/${id}`;\r\n  const {\r\n    data,\r\n    status,\r\n    refetch,\r\n    isRefetching,\r\n    isIdle,\r\n    isPreviousData,\r\n    isFetchedAfterMount,\r\n    isLoading,\r\n  } = useQuery(['getMultipleCategories'], async () => {\r\n    return axios.get(url).then(response => {\r\n      return response.data.data;\r\n    });\r\n  });\r\n  useEffect(() => {\r\n    // forceUpdate()\r\n    refetch();\r\n    window.scrollTo(0, 0);\r\n    // Appstore.setFooter(true)\r\n  }, [name, refetch]);\r\n  if (!data) {\r\n    let timer;\r\n    clearTimeout(timer);\r\n    timer = setTimeout(() => {\r\n      refetch();\r\n    }, 4000);\r\n  }\r\n  useEffect(() => {\r\n    if (data && data.length === 0) refetch();\r\n  },[data]);\r\n\r\n  console.log(isLoading, status, 'data id of all products');\r\n  if (!id) {\r\n    id = 'Loudspeaker';\r\n  }\r\n  const [cpage, setCpage] = useState(1);\r\n  const postsPerPage = 12;\r\n  const lastposti = cpage * postsPerPage;\r\n  const firstposti = lastposti - postsPerPage;\r\n  let currentposts;\r\n  if (data) {\r\n    currentposts = data.slice(firstposti, lastposti);\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [cpage]);\r\n  console.log(\r\n    isRefetching,\r\n    isPreviousData,\r\n    status,\r\n    isIdle,\r\n    isFetchedAfterMount,\r\n    'id of product section'\r\n  );\r\n  return (\r\n    <Box\r\n      className=\"mainProductsMain\"\r\n      as=\"section\"\r\n      p={'20px'}\r\n      flexDirection={'column'}\r\n      maxW={'1220px'}\r\n      m={'auto'}\r\n      mt={'100px'}\r\n      // color={\"#fff\"}\r\n    >\r\n      <Link className=\"goBackMain\" to={`/`}>\r\n        <Button\r\n          loadingText={'Loading'}\r\n          isLoading={data && !isRefetching ? false : true}\r\n        >\r\n          Go Back\r\n        </Button>\r\n      </Link>\r\n      <Heading textAlign={'center'}>{data ? name : `Loading ${name}`}</Heading>\r\n      {/* {data && data.length!==0 && !isRefetching ? (\r\n        <Box\r\n          display={'flex'}\r\n          gap={'30px'}\r\n          flexWrap={'wrap'}\r\n          justifyContent={'space-around'}\r\n          alignItems={'center'}\r\n        >\r\n          {currentposts.map(e => {\r\n            console.log(e, 'data for all products');\r\n            return (\r\n              <SingleProductCard\r\n                heading={e.pro_name ? e.pro_name : 'LoudSpeaker'}\r\n                icon={`${Appstore.imageLink}/${e.pro_image}`}\r\n                href={`/productDetails/${e.catid}/${e.showcaseid}/${e.pro_name}/${name}`}\r\n              />\r\n            );\r\n          })}\r\n        </Box>\r\n      ) : (\r\n        <Skeleton height={650} width=\"100%\" />\r\n      )} */}\r\n\r\n\r\n<h2 style={{margin:\"auto\",fontSize:\"24px\"}}>This page is under construction</h2>\r\n\r\n      {/* {data && data.length !==0 ? (\r\n        <Pagination\r\n          totalPosts={data && data.length}\r\n          postsPerPage={postsPerPage}\r\n          setCurrentPage={setCpage}\r\n          currentPage={cpage}\r\n        />\r\n      ) : (\r\n        <Skeleton height={50} width=\"100%\" />\r\n      )} */}\r\n    </Box>\r\n  );\r\n};\r\nexport default React.memo(MainProducts);\r\n"],"names":["SingleProductCard","React","_ref","heading","icon","description","href","_ref$referLink","referLink","_jsx","_Fragment","children","target","_jsxs","Box","maxW","className","borderRadius","h","w","overflow","Stack","align","p","background","rowGap","Image","loading","src","height","objectFit","alt","mt","Heading","fontSize","fontWeight","size","Link","to","CategoriesProductCard","_ref2","Text","Appstore","device","AiOutlineArrowRight","AiOutlineArrowDown","MainProducts","timer","_useParams","useParams","id","name","url","concat","apilink","_useQuery","useQuery","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","axios","get","then","response","data","stop","status","refetch","isRefetching","isIdle","isPreviousData","isFetchedAfterMount","isLoading","useEffect","window","scrollTo","clearTimeout","setTimeout","length","console","log","_useState","useState","_useState2","_slicedToArray","cpage","lastposti","firstposti","slice","as","flexDirection","m","Button","loadingText","textAlign","style","margin"],"sourceRoot":""}