{"version":3,"file":"static/js/753.d7a79469.chunk.js","mappings":"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","sources":["Components/Home/Getintouch/index.jsx","../node_modules/.pnpm/@chakra-ui+layout@2.3.1_@chakra-ui+system@2.6.1_react@18.2.0/node_modules/@chakra-ui/layout/src/text.tsx","../node_modules/.pnpm/@chakra-ui+layout@2.3.1_@chakra-ui+system@2.6.1_react@18.2.0/node_modules/@chakra-ui/layout/src/container.tsx","../node_modules/.pnpm/@chakra-ui+layout@2.3.1_@chakra-ui+system@2.6.1_react@18.2.0/node_modules/@chakra-ui/layout/src/heading.tsx","../node_modules/.pnpm/@chakra-ui+object-utils@2.1.0/node_modules/@chakra-ui/object-utils/dist/chunk-R3DH46PF.mjs"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './index.css';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Heading,\r\n  Input,\r\n  InputGroup,\r\n  Button,\r\n  Text,\r\n} from '@chakra-ui/react';\r\nimport image from '../../../assets/woman-writing-on-paper-3228878.png';\r\n\r\nconst Getintouch = () => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleInputChange = e => {\r\n    const { name, value } = e.target;\r\n    if (name === 'name') {\r\n      setName(value);\r\n    } else if (name === 'email') {\r\n      setEmail(value);\r\n      setError('');\r\n    } else if (name === 'message') {\r\n      setMessage(value);\r\n    }\r\n  };\r\n\r\n  const handleSendInquiry = () => {\r\n    if (!name || !email || !message) {\r\n      setError('Please fill in all fields');\r\n      return;\r\n    }\r\n\r\n    if (!isValidEmail(email)) {\r\n      setError('Please enter a valid email address');\r\n      return;\r\n    }\r\n\r\n    let nameChar = '';\r\n    const newCharSpace = name.split(' ');\r\n      for (let i = 0; i < newCharSpace.length; i++) {\r\n        nameChar = nameChar+newCharSpace[i] + '%20';\r\n      }\r\n    let messageChar = '';\r\n    const newMessageSpace = message.split(' ');\r\n      for (let i = 0; i < newMessageSpace.length; i++) {\r\n        messageChar = messageChar+newMessageSpace[i] + '%20';\r\n      }\r\n\r\n    const url = `https://wa.me/+919811670799/?text=Hello%20There%0a%0aI%20Have%20visited%20your%20website%20and%0a%0aI%20have%20a%20query%20regarding%20your%20products%20In%20your%20website%0a%0aName%20:%20${nameChar}%0aEmail%20:%20${email}%0aMessage%20:%20${messageChar}`;\r\n    console.log('Name:', name);\r\n    console.log('Email:', email);\r\n    console.log('Message:', message);\r\n    window.open(url);\r\n  };\r\n\r\n  const isValidEmail = email => {\r\n    const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\r\n    return emailPattern.test(email);\r\n  };\r\n\r\n  return (\r\n    <Box className=\"MainGetingTouch\" as=\"section\">\r\n      <Box className=\"mainget\" p={10}>\r\n        <Box className=\"firstofgetintouch\" background={`url(${image})`}>\r\n          <Heading className=\"headerfirsofget\">\r\n            We are here to help you in all your needs.\r\n          </Heading>\r\n        </Box>\r\n        <Container\r\n          bg={'#001620'}\r\n          className=\"containergetintouch\"\r\n          maxW={'503px'}\r\n          p={'20px 0px'}\r\n        >\r\n          <Box p={10} className=\"firstBoxGETINTOUCH\">\r\n            <Heading\r\n              className=\"sendInquiryDesktop\"\r\n              fontFamily={\"'Dosis','sans-serif'\"}\r\n              color={'white'}\r\n            >\r\n              Send Inquiry\r\n            </Heading>\r\n            <Text\r\n              mb={'20px'}\r\n              className=\"contactUsExtraText\"\r\n              color={'white'}\r\n              fontWeight={'500px'}\r\n            >\r\n              Our team is happy to answer your sales questions. Fill out the\r\n              form and we'll be in touch as soon as possible.\r\n            </Text>\r\n            <Box className=\"emailinput\" w={'full'}>\r\n              <InputGroup>\r\n                <Input\r\n                  variant=\"filled\"\r\n                  h=\"64px\"\r\n                  borderRadius={'41px'}\r\n                  placeholder=\"Your Name\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </InputGroup>\r\n            </Box>\r\n            <Box className=\"emailinput\" w={'full'}>\r\n              <InputGroup>\r\n                <Input\r\n                  variant=\"filled\"\r\n                  h=\"64px\"\r\n                  borderRadius={'41px'}\r\n                  placeholder=\"Email\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </InputGroup>\r\n            </Box>\r\n            <InputGroup className=\"nessageinput\" w={'full'}>\r\n              <Input\r\n                variant=\"filled\"\r\n                className=\"messagebox\"\r\n                h=\"64px\"\r\n                borderRadius={'41px'}\r\n                placeholder=\"Message\"\r\n                name=\"message\"\r\n                value={message}\r\n                onChange={handleInputChange}\r\n              />\r\n            </InputGroup>\r\n            {error && <Text color=\"red.500\">{error}</Text>}\r\n            <Box display=\"flex\" justifyContent=\"flex-end\">\r\n              <Button\r\n                color=\"black\"\r\n                background=\"#13e7f5\"\r\n                className=\"buttonSubmit\"\r\n                h={'64px'}\r\n                w={'full'}\r\n                m={'auto'}\r\n                p={'0px'}\r\n                fontSize={'18px'}\r\n                borderRadius={'41px'}\r\n                variant=\"solid\"\r\n                onClick={handleSendInquiry}\r\n              >\r\n                Send an Inquiry\r\n              </Button>\r\n            </Box>\r\n            <Text m={'auto'} color={'white'}>\r\n              Get in touch today\r\n            </Text>\r\n          </Box>{' '}\r\n        </Container>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(Getintouch);\r\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { compact } from \"@chakra-ui/object-utils\"\n\nexport interface TextProps extends HTMLChakraProps<\"p\">, ThemingProps<\"Text\"> {\n  /**\n   * The CSS `text-align` property\n   * @type SystemProps[\"textAlign\"]\n   */\n  align?: SystemProps[\"textAlign\"]\n  /**\n   * The CSS `text-decoration` property\n   * @type SystemProps[\"textDecoration\"]\n   */\n  decoration?: SystemProps[\"textDecoration\"]\n  /**\n   * The CSS `text-transform` property\n   * @type SystemProps[\"textTransform\"]\n   */\n  casing?: SystemProps[\"textTransform\"]\n}\n\n/**\n * Used to render texts or paragraphs.\n *\n * @see Docs https://chakra-ui.com/text\n */\nexport const Text = forwardRef<TextProps, \"p\">(function Text(props, ref) {\n  const styles = useStyleConfig(\"Text\", props)\n  const { className, align, decoration, casing, ...rest } =\n    omitThemingProps(props)\n\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing,\n  })\n\n  return (\n    <chakra.p\n      ref={ref}\n      className={cx(\"chakra-text\", props.className)}\n      {...aliasedProps}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nText.displayName = \"Text\"\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface ContainerProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"Container\"> {\n  /**\n   * If `true`, container will center its children\n   * regardless of their width.\n   *\n   * @default false\n   */\n  centerContent?: boolean\n}\n\n/**\n * Layout component used to wrap app or website content\n *\n * It sets `margin-left` and `margin-right` to `auto`,\n * to keep its content centered.\n *\n * It also sets a default max-width of `60ch` (60 characters).\n *\n * @see Docs https://chakra-ui.com/docs/components/container\n */\nexport const Container = forwardRef<ContainerProps, \"div\">(function Container(\n  props,\n  ref,\n) {\n  const { className, centerContent, ...rest } = omitThemingProps(props)\n\n  const styles = useStyleConfig(\"Container\", props)\n\n  return (\n    <chakra.div\n      ref={ref}\n      className={cx(\"chakra-container\", className)}\n      {...rest}\n      __css={{\n        ...styles,\n        ...(centerContent && {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }),\n      }}\n    />\n  )\n})\n\nContainer.displayName = \"Container\"\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface HeadingProps\n  extends HTMLChakraProps<\"h2\">,\n    ThemingProps<\"Heading\"> {}\n\n/**\n * `Heading` is used to render semantic HTML heading elements.\n *\n * By default, renders as `h2` with themantic size `xl`\n *\n * @see Docs https://chakra-ui.com/docs/components/heading\n */\nexport const Heading = forwardRef<HeadingProps, \"h2\">(function Heading(\n  props,\n  ref,\n) {\n  const styles = useStyleConfig(\"Heading\", props)\n  const { className, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.h2\n      ref={ref}\n      className={cx(\"chakra-heading\", props.className)}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nHeading.displayName = \"Heading\"\n","// src/compact.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\n\nexport {\n  compact\n};\n"],"names":["Getintouch","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","message","setMessage","_useState7","_useState8","error","setError","handleInputChange","e","_e$target","target","value","isValidEmail","test","_jsx","Box","className","as","children","_jsxs","p","background","concat","image","Heading","Container","bg","maxW","fontFamily","color","Text","mb","fontWeight","w","InputGroup","Input","variant","h","borderRadius","placeholder","onChange","display","justifyContent","Button","m","fontSize","onClick","nameChar","newCharSpace","split","i","length","messageChar","newMessageSpace","url","console","log","window","open","React","forwardRef","props","ref","styles","useStyleConfig","_omitThemingProps","omitThemingProps","rest","align","decoration","casing","_objectWithoutProperties","_excluded","aliasedProps","compact","textAlign","textDecoration","textTransform","jsx","chakra","_objectSpread","cx","__css","displayName","centerContent","div","flexDirection","alignItems","h2","object","clone","Object","assign","key"],"sourceRoot":""}