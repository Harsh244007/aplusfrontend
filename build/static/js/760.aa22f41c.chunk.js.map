{"version":3,"file":"static/js/760.aa22f41c.chunk.js","mappings":"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","sources":["Components/Common/pagination.jsx","Components/Home/FeaturedProducts/singleproduct.jsx","Components/Products/index.jsx"],"sourcesContent":["import { Box, Button } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nimport \"./common.css\";\r\n\r\nconst Pagination = ({\r\n    totalPosts,\r\n    postsPerPage,\r\n    setCurrentPage,\r\n    currentPage,\r\n}) => {\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n        pages.push(i);\r\n    }\r\n    return (\r\n        <Box className='pagination'>\r\n            {pages.map((page, index) => {\r\n                return (\r\n                    <Button\r\n                        key={index}\r\n                        onClick={() => setCurrentPage(page)}\r\n                        className={page == currentPage ? \"active\" : \"\"}>\r\n                        {page}\r\n                    </Button>\r\n                );\r\n            })}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default React.memo(Pagination);","import React from 'react';\r\nimport './index.css';\r\nimport {\r\n  Box,\r\n  // Container,\r\n  // Flex,\r\n  Heading,\r\n  // Input,\r\n  // InputGroup,\r\n  // InputRightAddon,\r\n  // Avatar,\r\n  // keyframes,\r\n  // SimpleGrid,\r\n  // Button,\r\n  Image,\r\n  // Icon,\r\n  Stack,\r\n  Text,\r\n  // useColorModeValue,\r\n} from '@chakra-ui/react';\r\n\r\nimport Appstore from '../../../Store/Appstore';\r\nimport { AiOutlineArrowRight, AiOutlineArrowDown } from 'react-icons/ai';\r\nimport { Link } from 'react-router-dom';\r\nconst SingleProductCard = React.memo(({ heading, description, icon, href ,referLink=false}) => {\r\n  const color = 'teal';\r\n\r\n  return (\r\n    <>\r\n    {!referLink?\r\n    <Link to={href}>\r\n    <Box\r\n      maxW=\"200px\"\r\n      // w={'full'}\r\n      className=\"featueProductsCard1\"\r\n      // borderWidth=\"1px\"\r\n      borderRadius=\"6px\"\r\n      h={285}\r\n      w=\"219px\"\r\n      // h=\"236px\"\r\n      overflow=\"hidden\"\r\n      // p={5}\r\n    >\r\n      <Stack className='featueProductsCard1FirstBox'  p={4} background={`#F8FBFD`} rowGap={5}>\r\n        <Image loading=\"lazy\"\r\n          src={icon}\r\n          w=\"179px\"\r\n          height=\"196px\"\r\n          objectFit=\"contain\"\r\n          alt={heading}\r\n          borderRadius={0}\r\n          // className=\"featuredprocutsimage\"\r\n        />\r\n      </Stack>\r\n      <Box className=\"overlay\"></Box>\r\n      <Box className='featueProductsCard1SecondBox' mt={2}>\r\n        <Heading overflow={\"visible\"} height={\"auto\"} fontSize={18} fontWeight={600} size=\"md\">\r\n          {heading}\r\n        </Heading>\r\n      </Box>\r\n    </Box>\r\n    </Link>:\r\n    \r\n    <a href={href} target=\"_blank\">\r\n      <Box\r\n      maxW=\"200px\"\r\n      // w={'full'}\r\n      className=\"featueProductsCard1\"\r\n      // borderWidth=\"1px\"\r\n      borderRadius=\"6px\"\r\n      h={285}\r\n      w=\"219px\"\r\n      // h=\"236px\"\r\n      overflow=\"hidden\"\r\n      // p={5}\r\n    >\r\n      <Stack align={'center'} p={4} background={`#F8FBFD`} rowGap={5}>\r\n        <Image loading=\"lazy\"\r\n          src={icon}\r\n          w=\"179px\"\r\n          height=\"196px\"\r\n          objectFit=\"contain\"\r\n          alt={heading}\r\n          borderRadius={0}\r\n          // className=\"featuredprocutsimage\"\r\n        />\r\n        {/* <Button variant={'solid'} size={'md'}>\r\n          View Product\r\n        </Button> */}\r\n      </Stack>\r\n\r\n      <Box mt={2}>\r\n        <Heading fontSize={20} fontWeight={600} size=\"md\">\r\n          {heading}\r\n        </Heading>\r\n      </Box>\r\n    </Box>\r\n      </a>}\r\n    </>\r\n  );\r\n});\r\nconst CategoriesProductCard = React.memo(({ icon }) => {\r\n  const color = 'teal';\r\n\r\n  return (\r\n    <Box\r\n      maxW=\"219px\"\r\n      // w={'full'}\r\n      className=\"featueProductsCard2\"\r\n      // borderWidth=\"1px\"\r\n      borderRadius=\"16px\"\r\n      w=\"219px\"\r\n      // h=\"236px\"\r\n      overflow=\"hidden\"\r\n      // p={5}\r\n    >\r\n      <Heading className=\"headerfeatureprod\">All Categories</Heading>\r\n      <Text className=\"textfeatureprod\">\r\n        View All{' '}\r\n        {Appstore.device ? <AiOutlineArrowRight /> : <AiOutlineArrowDown />}\r\n      </Text>\r\n      {/* <Stack align={'center'} p={5} background={`#F8FBFD`} rowGap={5}> */}\r\n      <Image loading=\"lazy\"\r\n        src={icon}\r\n        w=\"219px\"\r\n        height=\"284px\"\r\n        objectFit=\"contain\"\r\n        // alt={heading}\r\n        borderRadius={0}\r\n        // className=\"featuredprocutsimage\"\r\n      />\r\n      {/* <Button variant={'solid'} size={'md'}>\r\n          View Product\r\n        </Button> */}\r\n      {/* </Stack> */}\r\n\r\n      {/* <Box mt={2}> */}\r\n\r\n      {/* <Heading fontSize={20} fontWeight={600} size=\"md\">{heading}</Heading> */}\r\n      {/* </Box> */}\r\n    </Box>\r\n  );\r\n});\r\n\r\nexport { SingleProductCard, CategoriesProductCard };\r\n","import React, { useEffect } from 'react';\r\nimport './index.css';\r\nimport { Box, Button, Heading, Skeleton } from '@chakra-ui/react';\r\nimport { SingleProductCard } from '../Home/FeaturedProducts/singleproduct';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useQuery } from 'react-query';\r\nimport axios from 'axios';\r\nimport Appstore from '../../Store/Appstore';\r\nimport Pagination from '../Common/pagination';\r\nimport { useState } from 'react';\r\nconst MainProducts = () => {\r\n  //   const [state, updateState] = React.useState();\r\n  // const forceUpdate = React.useCallback(() => updateState({}), []);\r\n\r\n  let { id, name } = useParams();\r\n\r\n  const url = `${Appstore.apilink}/returncategory/${id}`;\r\n  const {\r\n    data,\r\n    status,\r\n    refetch,\r\n    isRefetching,\r\n    isIdle,\r\n    isPreviousData,\r\n    isFetchedAfterMount,\r\n    isLoading,\r\n  } = useQuery(['getMultipleCategories'], async () => {\r\n    return axios.get(url).then(response => {\r\n      return response.data.data;\r\n    });\r\n  });\r\n  useEffect(() => {\r\n    // forceUpdate()\r\n    refetch();\r\n    window.scrollTo(0, 0);\r\n    // Appstore.setFooter(true)\r\n  }, [name, refetch]);\r\n  if (!data) {\r\n    let timer;\r\n    clearTimeout(timer);\r\n    timer = setTimeout(() => {\r\n      refetch();\r\n    }, 4000);\r\n  }\r\n  useEffect(() => {\r\n    if (data == []) refetch();\r\n  });\r\n\r\n  console.log(isLoading, status, 'data id of all products');\r\n  if (!id) {\r\n    id = 'Loudspeaker';\r\n  }\r\n  const [cpage, setCpage] = useState(1);\r\n  const postsPerPage = 12;\r\n  const lastposti = cpage * postsPerPage;\r\n  const firstposti = lastposti - postsPerPage;\r\n  let currentposts;\r\n  if (data) {\r\n    currentposts = data.slice(firstposti, lastposti);\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [cpage]);\r\n  console.log(\r\n    isRefetching,\r\n    isPreviousData,\r\n    status,\r\n    isIdle,\r\n    isFetchedAfterMount,\r\n    'id of product section'\r\n  );\r\n  return (\r\n    <Box\r\n      className=\"mainProductsMain\"\r\n      as=\"section\"\r\n      p={'20px'}\r\n      flexDirection={'column'}\r\n      maxW={'1220px'}\r\n      m={'auto'}\r\n      mt={'100px'}\r\n      // color={\"#fff\"}\r\n    >\r\n      <Link className=\"goBackMain\" to={`/`}>\r\n        <Button\r\n          loadingText={'Loading'}\r\n          isLoading={data && !isRefetching ? false : true}\r\n        >\r\n          Go Back\r\n        </Button>\r\n      </Link>\r\n      <Heading textAlign={'center'}>{data ? name : `Loading ${name}`}</Heading>\r\n      {data && data != [] && !isRefetching ? (\r\n        <Box\r\n          display={'flex'}\r\n          gap={'30px'}\r\n          flexWrap={'wrap'}\r\n          justifyContent={'space-around'}\r\n          alignItems={'center'}\r\n        >\r\n          {currentposts.map(e => {\r\n            console.log(e, 'data for all products');\r\n            return (\r\n              <SingleProductCard\r\n                heading={e.pro_name ? e.pro_name : 'LoudSpeaker'}\r\n                icon={`${Appstore.imageLink}/${e.pro_image}`}\r\n                href={`/productDetails/${e.catid}/${e.showcaseid}/${e.pro_name}/${name}`}\r\n              />\r\n            );\r\n          })}\r\n        </Box>\r\n      ) : (\r\n        <Skeleton height={650} width=\"100%\" />\r\n      )}\r\n      {data && data != [] ? (\r\n        <Pagination\r\n          totalPosts={data && data.length}\r\n          postsPerPage={postsPerPage}\r\n          setCurrentPage={setCpage}\r\n          currentPage={cpage}\r\n        />\r\n      ) : (\r\n        <Skeleton height={50} width=\"100%\" />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\nexport default React.memo(MainProducts);\r\n"],"names":["Pagination","_ref","totalPosts","postsPerPage","setCurrentPage","currentPage","pages","i","Math","ceil","push","_jsx","Box","className","children","map","page","index","Button","onClick","React","SingleProductCard","heading","icon","description","href","_ref$referLink","referLink","_Fragment","target","_jsxs","maxW","borderRadius","h","w","overflow","Stack","align","p","background","rowGap","Image","loading","src","height","objectFit","alt","mt","Heading","fontSize","fontWeight","size","Link","to","CategoriesProductCard","_ref2","Text","Appstore","device","AiOutlineArrowRight","AiOutlineArrowDown","MainProducts","timer","_useParams","useParams","id","name","url","concat","apilink","_useQuery","useQuery","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","axios","get","then","response","data","stop","status","refetch","isRefetching","isIdle","isPreviousData","isFetchedAfterMount","isLoading","useEffect","window","scrollTo","clearTimeout","setTimeout","console","log","currentposts","_useState","useState","_useState2","_slicedToArray","cpage","setCpage","lastposti","firstposti","slice","as","flexDirection","m","loadingText","textAlign","display","gap","flexWrap","justifyContent","alignItems","e","pro_name","imageLink","pro_image","catid","showcaseid","Skeleton","width","length"],"sourceRoot":""}