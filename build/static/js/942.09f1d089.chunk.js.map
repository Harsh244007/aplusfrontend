{"version":3,"file":"static/js/942.09f1d089.chunk.js","mappings":"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","sources":["Components/Common/pagination.jsx","Components/Home/Categories/singleproduct.jsx","Components/SingleMainProduct/index.jsx"],"sourcesContent":["import { Box, Button } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nimport \"./common.css\";\r\n\r\nconst Pagination = ({\r\n    totalPosts,\r\n    postsPerPage,\r\n    setCurrentPage,\r\n    currentPage,\r\n}) => {\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n        pages.push(i);\r\n    }\r\n    return (\r\n        <Box className='pagination'>\r\n            {pages.map((page, index) => {\r\n                return (\r\n                    <Button\r\n                        key={index}\r\n                        onClick={() => setCurrentPage(page)}\r\n                        className={page == currentPage ? \"active\" : \"\"}>\r\n                        {page}\r\n                    </Button>\r\n                );\r\n            })}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default React.memo(Pagination);","import React from 'react';\r\nimport './index.css';\r\nimport {\r\n  Box,\r\n  // Container,\r\n  // Flex,\r\n  Heading,\r\n  // Input,\r\n  // InputGroup,\r\n  // InputRightAddon,\r\n  // Avatar,\r\n  // keyframes,\r\n  // SimpleGrid,\r\n  // Button,\r\n  Image,\r\n  // Icon,\r\n  Stack,\r\n  Text,\r\n  // useColorModeValue,\r\n} from '@chakra-ui/react';\r\n\r\nimport Appstore from '../../../Store/Appstore';\r\nimport { AiOutlineArrowRight, AiOutlineArrowDown } from 'react-icons/ai';\r\nimport { Link } from 'react-router-dom';\r\nconst SingleProductCard = React.memo(({ heading, description, icon, href ,referLink=false}) => {\r\n\r\n  return (\r\n    <>\r\n    {!referLink?\r\n    <Link to={href}>\r\n    <Box\r\n      maxW=\"200px\"\r\n      // w={'full'}\r\n      className=\"featueProductsCard1\"\r\n      // borderWidth=\"1px\"\r\n      borderRadius=\"6px\"\r\n      h={285}\r\n      w=\"219px\"\r\n      // h=\"236px\"\r\n      overflow=\"hidden\"\r\n      // p={5}\r\n    >\r\n      <Stack className='featueProductsCard1FirstBox'  p={4} background={`#F8FBFD`} rowGap={5}>\r\n        <Image loading=\"lazy\"\r\n          src={icon}\r\n          w=\"179px\"\r\n          height=\"196px\"\r\n          objectFit=\"contain\"\r\n          alt={heading}\r\n          borderRadius={0}\r\n          // className=\"featuredprocutsimage\"\r\n        />\r\n      </Stack>\r\n      <Box className=\"overlay\"></Box>\r\n      <Box className='featueProductsCard1SecondBox' mt={2}>\r\n        <Heading overflow={\"visible\"} height={\"auto\"} fontSize={18} fontWeight={600} size=\"md\">\r\n          {heading}\r\n        </Heading>\r\n      </Box>\r\n    </Box>\r\n    </Link>:\r\n    \r\n    <a href={href} target=\"_blank\">\r\n      <Box\r\n      maxW=\"200px\"\r\n      // w={'full'}\r\n      className=\"featueProductsCard1\"\r\n      // borderWidth=\"1px\"\r\n      borderRadius=\"6px\"\r\n      h={285}\r\n      w=\"219px\"\r\n      // h=\"236px\"\r\n      overflow=\"hidden\"\r\n      // p={5}\r\n    >\r\n      <Stack align={'center'} p={4} background={`#F8FBFD`} rowGap={5}>\r\n        <Image loading=\"lazy\"\r\n          src={icon}\r\n          w=\"179px\"\r\n          height=\"196px\"\r\n          objectFit=\"contain\"\r\n          alt={heading}\r\n          borderRadius={0}\r\n          // className=\"featuredprocutsimage\"\r\n        />\r\n        {/* <Button variant={'solid'} size={'md'}>\r\n          View Product\r\n        </Button> */}\r\n      </Stack>\r\n\r\n      <Box mt={2}>\r\n        <Heading fontSize={20} fontWeight={600} size=\"md\">\r\n          {heading}\r\n        </Heading>\r\n      </Box>\r\n    </Box>\r\n      </a>}\r\n    </>\r\n  );\r\n});\r\nconst CategoriesProductCard = React.memo(({ icon }) => {\r\n\r\n  return (\r\n    <Box\r\n      maxW=\"219px\"\r\n      // w={'full'}\r\n      className=\"featueProductsCard2\"\r\n      // borderWidth=\"1px\"\r\n      borderRadius=\"16px\"\r\n      w=\"219px\"\r\n      // h=\"236px\"\r\n      overflow=\"hidden\"\r\n      // p={5}\r\n    >\r\n      <Heading className=\"headerfeatureprod\">All Categories</Heading>\r\n      <Text className=\"textfeatureprod\">\r\n        View All{' '}\r\n        {Appstore.device ? <AiOutlineArrowRight /> : <AiOutlineArrowDown />}\r\n      </Text>\r\n      {/* <Stack align={'center'} p={5} background={`#F8FBFD`} rowGap={5}> */}\r\n      <Image loading=\"lazy\"\r\n        src={icon}\r\n        w=\"219px\"\r\n        height=\"284px\"\r\n        objectFit=\"contain\"\r\n        // alt={heading}\r\n        borderRadius={0}\r\n        // className=\"featuredprocutsimage\"\r\n      />\r\n      {/* <Button variant={'solid'} size={'md'}>\r\n          View Product\r\n        </Button> */}\r\n      {/* </Stack> */}\r\n\r\n      {/* <Box mt={2}> */}\r\n\r\n      {/* <Heading fontSize={20} fontWeight={600} size=\"md\">{heading}</Heading> */}\r\n      {/* </Box> */}\r\n    </Box>\r\n  );\r\n});\r\n\r\nexport { SingleProductCard, CategoriesProductCard };\r\n","import React, { useEffect, useState } from 'react';\r\nimport './index.css';\r\nimport ProductsJSON from '../../Configs/JSON/returnProductDetails.json';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Heading,\r\n  Image,\r\n  // List,\r\n  // ListItem,\r\n  Skeleton,\r\n  Text,\r\n  useColorModeValue,\r\n} from '@chakra-ui/react';\r\nimport { SingleProductCard } from '../Home/Categories/singleproduct';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Pagination from '../Common/pagination';\r\nimport Appstore from '../../Store/Appstore';\r\n// import { useQuery } from 'react-query';\r\n// import axios from 'axios';\r\nconst MainProductDetails = () => {\r\n  const [desc, setDesc] = useState();\r\n  let { id, catid, name, catName } = useParams();\r\n\r\n  useEffect(() => {\r\n    // refetch();\r\n    window.scrollTo(0, 0);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [name]);\r\n\r\n  const FilterResult = ProductsJSON.data.filter(e => e.pro_name === name);\r\n  console.log(FilterResult, 'filtered result');\r\n  const [cpage, setCpage] = useState(1);\r\n  const postsPerPage = 4;\r\n  const lastposti = cpage * postsPerPage;\r\n  const firstposti = lastposti - postsPerPage;\r\n  let currentposts;\r\n  if (ProductsJSON.data) {\r\n    currentposts = ProductsJSON.data.slice(firstposti, lastposti);\r\n  }\r\n  let color = useColorModeValue('yellow.500', 'yellow.300');\r\n  if (FilterResult && !desc) {\r\n    const regex = /s:(\\d+):\"(.*?)\";/g;\r\n    let matches = [...FilterResult[0].pro_desc.matchAll(regex)];\r\n    const deserializedObjects = matches.map(match => {\r\n      const array = match[2];\r\n      const deserializedObject = `{${array}}`;\r\n      return deserializedObject;\r\n    });\r\n    setDesc(deserializedObjects);\r\n    console.log(\r\n      FilterResult[0].pro_desc.match(/s:(\\d+):\"(.*?)\";/g)[0],\r\n      'data of single product'\r\n    );\r\n  }\r\n  return (\r\n    <Box\r\n      className=\"mainSubProductsMain\"\r\n      as=\"section\"\r\n      flexDirection={'column'}\r\n      p={'20px'}\r\n      maxW={'1220px'}\r\n      m={'auto'}\r\n      mt={'100px'}\r\n    >\r\n      <Link\r\n        className=\"goBackMain\"\r\n        to={`/products/${catid}/${FilterResult && FilterResult.pro_name}`}\r\n      >\r\n        <Button\r\n          loadingText={'Loading'}\r\n          isLoading={FilterResult && FilterResult.pro_name ? false : true}\r\n        >\r\n          Go Back\r\n        </Button>\r\n      </Link>\r\n      <Heading textAlign={'center'}>\r\n        {FilterResult.length === 0 && !FilterResult[0].pro_name\r\n          ? `Loading ${name}`\r\n          : FilterResult[0].pro_name}\r\n      </Heading>\r\n      {FilterResult.length !== 0 ? (\r\n        <Box\r\n          display={'flex'}\r\n          gap={'30px'}\r\n          flexWrap={'wrap'}\r\n          justifyContent={'space-around'}\r\n          alignItems={'center'}\r\n        >\r\n          <Box w={'350px'} h={'350px'} border={'2px dashed #dedede'}>\r\n            <Image\r\n              w={'346px'}\r\n              alt={FilterResult[0].pro_image}\r\n              objectFit={'contain'}\r\n              h={'346px'}\r\n              loading=\"lazy\"\r\n              src={`${Appstore.imageLink}/${FilterResult[0].pro_image}`}\r\n            />\r\n          </Box>\r\n\r\n          <Box className=\"secondBox\" w={'750px'}>\r\n            <Box>\r\n              <Text\r\n                fontWeight={'bold'}\r\n                fontSize={{ base: '16px', lg: '18px' }}\r\n                color={color}\r\n                // fontWeight={'500'}\r\n                textTransform={'uppercase'}\r\n                mb={'4'}\r\n              >\r\n                Product Details\r\n              </Text>\r\n\r\n              <Box spacing={2}>\r\n                {desc ? (\r\n                  <>\r\n                    {desc.map((e, i) => {\r\n                      if (i % 4 == 0 && i != 0) {\r\n                        console.log(e, desc[i - 3], 'main data');\r\n                        return (\r\n                          <Box key={i}>\r\n                            <Text as={'span'} fontWeight={'bold'}>\r\n                              {desc[i - 3].replace(/{|}/g, '')}\r\n                            </Text>{' '}\r\n                            {desc[i - 1].replace(/{|}/g, '')}\r\n                          </Box>\r\n                        );\r\n                      }\r\n                    })}\r\n                  </>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      ) : (\r\n        <Skeleton height={650} width=\"100%\" />\r\n      )}\r\n      {ProductsJSON.data.length !== 0 ? (\r\n        <Box m={'auto'} gap={'30px'}>\r\n          <Heading>You might be interested in</Heading>\r\n          <Box\r\n            display={'flex'}\r\n            flexWrap={'wrap'}\r\n            gap={'30px'}\r\n            justifyContent={'space-evenly'}\r\n          >\r\n            {currentposts.map(e => {\r\n              console.log(e, 'data for all products');\r\n              let name = e.pro_name.replace(' ', '').replace(' ', '');\r\n              console.log(name, e.pro_name, 'name of single product');\r\n              return (\r\n                <SingleProductCard\r\n                  referLink={false}\r\n                  heading={e.pro_name ? e.pro_name : 'LoudSpeaker'}\r\n                  icon={`${Appstore.imageLink}/${e.pro_image}`}\r\n                  href={`/productDetails/${e.catid}/${e.showcaseid}/${name}/${catName}`}\r\n                />\r\n              );\r\n            })}\r\n          </Box>\r\n          {ProductsJSON.data.length !== 0 ? (\r\n            <Pagination\r\n              totalPosts={ProductsJSON.data.length/8}\r\n              postsPerPage={postsPerPage}\r\n              setCurrentPage={setCpage}\r\n              currentPage={cpage}\r\n            />\r\n          ) : (\r\n            <Skeleton height={50} width=\"100%\" />\r\n          )}\r\n        </Box>\r\n      ) : (\r\n        <Skeleton height={450} width=\"100%\" />\r\n      )}\r\n\r\n      {/* <h2 style={{ margin: 'auto', fontSize: '24px' }}>\r\n        This page is under construction\r\n      </h2> */}\r\n    </Box>\r\n  );\r\n};\r\nexport default React.memo(MainProductDetails);\r\n{\r\n  /* <ListItem>\r\n                  <Text as={'span'} fontWeight={'bold'}>\r\n                    Between lugs:\r\n                  </Text>{' '}\r\n                  20 mm\r\n                </ListItem>\r\n                \r\n                <ListItem>\r\n                  <Text as={'span'} fontWeight={'bold'}>\r\n                    Case:\r\n                  </Text>{' '}\r\n                  Steel\r\n                </ListItem>\r\n                <ListItem>\r\n                  <Text as={'span'} fontWeight={'bold'}>\r\n                    Case diameter:\r\n                  </Text>{' '}\r\n                  42 mm\r\n                </ListItem>\r\n                <ListItem>\r\n                  <Text as={'span'} fontWeight={'bold'}>\r\n                    Dial color:\r\n                  </Text>{' '}\r\n                  Black\r\n                </ListItem>\r\n                <ListItem>\r\n                  <Text as={'span'} fontWeight={'bold'}>\r\n                    Crystal:\r\n                  </Text>{' '}\r\n                  Domed, scratch‑resistant sapphire crystal with anti‑reflective\r\n                  treatment inside\r\n                </ListItem>\r\n                <ListItem>\r\n                  <Text as={'span'} fontWeight={'bold'}>\r\n                    Water resistance:\r\n                  </Text>{' '}\r\n                  5 bar (50 metres / 167 feet){' '}\r\n                </ListItem> */\r\n}\r\n"],"names":["Pagination","_ref","totalPosts","postsPerPage","setCurrentPage","currentPage","pages","i","Math","ceil","push","_jsx","Box","className","children","map","page","index","Button","onClick","React","SingleProductCard","heading","icon","description","href","_ref$referLink","referLink","_Fragment","target","_jsxs","maxW","borderRadius","h","w","overflow","Stack","align","p","background","rowGap","Image","loading","src","height","objectFit","alt","mt","Heading","fontSize","fontWeight","size","Link","to","CategoriesProductCard","_ref2","Text","Appstore","device","AiOutlineArrowRight","AiOutlineArrowDown","MainProductDetails","_useState","useState","_useState2","_slicedToArray","desc","setDesc","_useParams","useParams","catid","id","name","catName","useEffect","window","scrollTo","FilterResult","ProductsJSON","filter","e","pro_name","console","log","currentposts","_useState3","_useState4","cpage","setCpage","lastposti","firstposti","slice","color","useColorModeValue","_toConsumableArray","pro_desc","matchAll","match","array","concat","as","flexDirection","m","loadingText","isLoading","textAlign","length","display","gap","flexWrap","justifyContent","alignItems","border","pro_image","imageLink","base","lg","textTransform","mb","spacing","replace","Skeleton","width","showcaseid"],"sourceRoot":""}