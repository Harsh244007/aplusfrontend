{"version":3,"file":"static/js/50.560b4420.chunk.js","mappings":"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","sources":["Components/Products/index.jsx","../node_modules/@badrap/bar-of-progress/src/index.ts","../node_modules/@chakra-ui/button/dist/chunk-DGWZA2DU.mjs","../node_modules/@chakra-ui/button/dist/chunk-HCASMTTF.mjs","../node_modules/@chakra-ui/button/dist/chunk-HNNHG6RU.mjs","../node_modules/@chakra-ui/button/dist/chunk-NAA7TEES.mjs","../node_modules/@chakra-ui/button/dist/chunk-FRFD4OXU.mjs","../node_modules/@chakra-ui/react-use-merge-refs/dist/index.mjs"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport './index.css';\r\nimport { Box, Button, Heading } from '@chakra-ui/react';\r\nimport ProgressBar from '@badrap/bar-of-progress';\r\nimport { SingleProductCard } from '../Home/FeaturedProducts/singleproduct';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nimport first from '../../assets/Rectangle 16.svg';\r\nconst MainProducts = () => {\r\n  const progress = new ProgressBar({\r\n    size: 2,\r\n    color: '#29e',\r\n    className: 'bar-of-progress',\r\n    delay: 80,\r\n  });\r\n  setTimeout(() => {\r\n    progress.finish();\r\n  }, 2000);\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    // Appstore.setFooter(true)\r\n  }, []);\r\n\r\n  let { id } = useParams();\r\n  if (!id) {\r\n    id = 'Loudspeaker';\r\n  }\r\n  console.log(id, 'id of product section');\r\n  return (\r\n    <Box\r\n      className=\"mainProductsMain\"\r\n      as=\"section\"\r\n      p={'20px'}\r\n      maxW={'1220px'}\r\n      m={'auto'}\r\n      mt={'100px'}\r\n      // color={\"#fff\"}\r\n    >\r\n      <Link className='goBackMain' to={`/`}>\r\n    <Button>Go Back</Button>\r\n      </Link>\r\n      <Heading textAlign={'center'}>{id ? id : 'LoudSpeaker'}</Heading>\r\n      <Box\r\n        display={'flex'}\r\n        gap={'30px'}\r\n        flexWrap={'wrap'}\r\n        justifyContent={'space-around'}\r\n        alignItems={'center'}\r\n      >\r\n        <SingleProductCard\r\n          heading={id ? id : 'LoudSpeaker'}\r\n          icon={first}\r\n          href={`/productDetails/1`}\r\n        />\r\n\r\n        <SingleProductCard\r\n          heading={id ? id : 'LoudSpeaker'}\r\n          icon={first}\r\n          href={`/productDetails/1`}\r\n        />\r\n\r\n        <SingleProductCard\r\n          heading={id ? id : 'LoudSpeaker'}\r\n          icon={first}\r\n          href={`/productDetails/1`}\r\n        />\r\n\r\n        <SingleProductCard\r\n          heading={id ? id : 'LoudSpeaker'}\r\n          icon={first}\r\n          href={`/productDetails/1`}\r\n        />\r\n\r\n        <SingleProductCard\r\n          heading={id ? id : 'LoudSpeaker'}\r\n          icon={first}\r\n          href={`/productDetails/1`}\r\n        />\r\n        <SingleProductCard\r\n          heading={id ? id : 'LoudSpeaker'}\r\n          icon={first}\r\n          href={`/productDetails/1`}\r\n        />\r\n\r\n        <SingleProductCard\r\n          heading={id ? id : 'LoudSpeaker'}\r\n          icon={first}\r\n          href={`/productDetails/1`}\r\n        />\r\n\r\n        <SingleProductCard\r\n          heading={id ? id : 'LoudSpeaker'}\r\n          icon={first}\r\n          href={`/productDetails/1`}\r\n        />\r\n\r\n        <SingleProductCard\r\n          heading={id ? id : 'LoudSpeaker'}\r\n          icon={first}\r\n          href={`/productDetails/1`}\r\n        />\r\n\r\n        <SingleProductCard\r\n          heading={id ? id : 'LoudSpeaker'}\r\n          icon={first}\r\n          href={`/productDetails/1`}\r\n        />\r\n        <SingleProductCard\r\n          heading={id ? id : 'LoudSpeaker'}\r\n          icon={first}\r\n          href={`/productDetails/1`}\r\n        />\r\n\r\n        <SingleProductCard\r\n          heading={id ? id : 'LoudSpeaker'}\r\n          icon={first}\r\n          href={`/productDetails/1`}\r\n        />\r\n\r\n        <SingleProductCard\r\n          heading={id ? id : 'LoudSpeaker'}\r\n          icon={first}\r\n          href={`/productDetails/1`}\r\n        />\r\n\r\n        <SingleProductCard\r\n          heading={id ? id : 'LoudSpeaker'}\r\n          icon={first}\r\n          href={`/productDetails/1`}\r\n        />\r\n\r\n        <SingleProductCard\r\n          heading={id ? id : 'LoudSpeaker'}\r\n          icon={first}\r\n          href={`/productDetails/1`}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport default React.memo(MainProducts);\r\n","interface ProgressBarConfig {\n  /**\n   * The size (height) of the progress bar.\n   * Numeric values get converted to px. */\n  size: number | string;\n  /**\n   * Color of the progress bar. Also used for the glow\n   * around the bar. */\n  color: string;\n  /**\n   * Class name used for the progress bar element. */\n  className: string;\n  /**\n   * How many milliseconds to wait before the progress bar\n   * animation starts after calling .start(). */\n  delay: number;\n}\n\nexport default class ProgressBar {\n  /** Show the progress bar and begin animating it. */\n  start: () => void;\n\n  /** End the progress bar animation. */\n  finish: () => void;\n\n  constructor(options?: Partial<ProgressBarConfig>) {\n    const assign = Object.assign;\n    const config: ProgressBarConfig = assign(\n      {\n        size: 2,\n        color: \"#29e\",\n        className: \"bar-of-progress\",\n        delay: 80,\n      },\n      options\n    );\n\n    const initialStyle = {\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      margin: 0,\n      padding: 0,\n      border: \"none\",\n      borderRadius: 0,\n      backgroundColor: config.color,\n      zIndex: 10000,\n      height:\n        typeof config.size === \"number\" ? config.size + \"px\" : config.size,\n      color: config.color,\n      opacity: 0,\n      width: \"0%\",\n    };\n\n    const startedStyle = {\n      opacity: 1,\n      width: \"99%\",\n      transition: \"width 10s cubic-bezier(0.1, 0.05, 0, 1)\",\n    };\n\n    const finishedStyle = {\n      opacity: 0,\n      width: \"100%\",\n      transition: \"width 0.1s ease-out, opacity 0.5s ease 0.2s\",\n    };\n\n    const glowStyle = {\n      opacity: 0.4,\n      boxShadow: \"3px 0 8px\",\n      height: \"100%\",\n    };\n\n    let timeout: ReturnType<typeof setTimeout> | undefined;\n    let current!: HTMLElement;\n\n    this.start = () => {\n      if (current && current.parentNode) {\n        current.parentNode.removeChild(current);\n      }\n      current = document.body.appendChild(document.createElement(\"div\"));\n      current.className = config.className + \" stopped\";\n      assign(current.style, initialStyle);\n\n      const glow = current.appendChild(document.createElement(\"div\"));\n      glow.className = \"glow\";\n      assign(glow.style, glowStyle);\n\n      if (timeout != null) {\n        clearTimeout(timeout);\n      }\n      timeout = setTimeout(() => {\n        timeout = undefined;\n        current.className = config.className + \" started\";\n        assign(current.style, startedStyle);\n      }, config.delay);\n\n      // Force a reflow, just to be sure that the initial style takes effect.\n      current.scrollTop = 0;\n    };\n\n    this.finish = () => {\n      if (timeout != null) {\n        clearTimeout(timeout);\n        timeout = undefined;\n      }\n      if (current) {\n        current.className = config.className + \" finished\";\n        assign(current.style, finishedStyle);\n      }\n    };\n  }\n}\n","// src/button-context.ts\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [ButtonGroupProvider, useButtonGroup] = createContext({\n  strict: false,\n  name: \"ButtonGroupContext\"\n});\n\nexport {\n  ButtonGroupProvider,\n  useButtonGroup\n};\n","// src/button-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { cloneElement, isValidElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonIcon(props) {\n  const { children, className, ...rest } = props;\n  const _children = isValidElement(children) ? cloneElement(children, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : children;\n  const _className = cx(\"chakra-button__icon\", className);\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      display: \"inline-flex\",\n      alignSelf: \"center\",\n      flexShrink: 0,\n      ...rest,\n      className: _className,\n      children: _children\n    }\n  );\n}\nButtonIcon.displayName = \"ButtonIcon\";\n\nexport {\n  ButtonIcon\n};\n","// src/button-spinner.tsx\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonSpinner(props) {\n  const {\n    label,\n    placement,\n    spacing = \"0.5rem\",\n    children = /* @__PURE__ */ jsx(Spinner, { color: \"currentColor\", width: \"1em\", height: \"1em\" }),\n    className,\n    __css,\n    ...rest\n  } = props;\n  const _className = cx(\"chakra-button__spinner\", className);\n  const marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\";\n  const spinnerStyles = useMemo(\n    () => ({\n      display: \"flex\",\n      alignItems: \"center\",\n      position: label ? \"relative\" : \"absolute\",\n      [marginProp]: label ? spacing : 0,\n      fontSize: \"1em\",\n      lineHeight: \"normal\",\n      ...__css\n    }),\n    [__css, label, marginProp, spacing]\n  );\n  return /* @__PURE__ */ jsx(chakra.div, { className: _className, ...rest, __css: spinnerStyles, children });\n}\nButtonSpinner.displayName = \"ButtonSpinner\";\n\nexport {\n  ButtonSpinner\n};\n","import {\n  useButtonType\n} from \"./chunk-FRFD4OXU.mjs\";\nimport {\n  useButtonGroup\n} from \"./chunk-DGWZA2DU.mjs\";\nimport {\n  ButtonIcon\n} from \"./chunk-HCASMTTF.mjs\";\nimport {\n  ButtonSpinner\n} from \"./chunk-HNNHG6RU.mjs\";\n\n// src/button.tsx\nimport { useMergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar Button = forwardRef((props, ref) => {\n  const group = useButtonGroup();\n  const styles = useStyleConfig(\"Button\", { ...group, ...props });\n  const {\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    isLoading,\n    isActive,\n    children,\n    leftIcon,\n    rightIcon,\n    loadingText,\n    iconSpacing = \"0.5rem\",\n    type,\n    spinner,\n    spinnerPlacement = \"start\",\n    className,\n    as,\n    ...rest\n  } = omitThemingProps(props);\n  const buttonStyles = useMemo(() => {\n    const _focus = { ...styles == null ? void 0 : styles[\"_focus\"], zIndex: 1 };\n    return {\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      userSelect: \"none\",\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\",\n      outline: \"none\",\n      ...styles,\n      ...!!group && { _focus }\n    };\n  }, [styles, group]);\n  const { ref: _ref, type: defaultType } = useButtonType(as);\n  const contentProps = { rightIcon, leftIcon, iconSpacing, children };\n  return /* @__PURE__ */ jsxs(\n    chakra.button,\n    {\n      ref: useMergeRefs(ref, _ref),\n      as,\n      type: type != null ? type : defaultType,\n      \"data-active\": dataAttr(isActive),\n      \"data-loading\": dataAttr(isLoading),\n      __css: buttonStyles,\n      className: cx(\"chakra-button\", className),\n      ...rest,\n      disabled: isDisabled || isLoading,\n      children: [\n        isLoading && spinnerPlacement === \"start\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--start\",\n            label: loadingText,\n            placement: \"start\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        ),\n        isLoading ? loadingText || /* @__PURE__ */ jsx(chakra.span, { opacity: 0, children: /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }) }) : /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }),\n        isLoading && spinnerPlacement === \"end\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--end\",\n            label: loadingText,\n            placement: \"end\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        )\n      ]\n    }\n  );\n});\nButton.displayName = \"Button\";\nfunction ButtonContent(props) {\n  const { leftIcon, rightIcon, children, iconSpacing } = props;\n  return /* @__PURE__ */ jsxs(Fragment, { children: [\n    leftIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginEnd: iconSpacing, children: leftIcon }),\n    children,\n    rightIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginStart: iconSpacing, children: rightIcon })\n  ] });\n}\n\nexport {\n  Button\n};\n","// src/use-button-type.tsx\nimport { useCallback, useState } from \"react\";\nfunction useButtonType(value) {\n  const [isButton, setIsButton] = useState(!value);\n  const refCallback = useCallback((node) => {\n    if (!node)\n      return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  const type = isButton ? \"button\" : void 0;\n  return { ref: refCallback, type };\n}\n\nexport {\n  useButtonType\n};\n","// src/index.ts\nimport { useMemo } from \"react\";\nfunction assignRef(ref, value) {\n  if (ref == null)\n    return;\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  return (node) => {\n    refs.forEach((ref) => {\n      assignRef(ref, node);\n    });\n  };\n}\nfunction useMergeRefs(...refs) {\n  return useMemo(() => mergeRefs(...refs), refs);\n}\nexport {\n  assignRef,\n  mergeRefs,\n  useMergeRefs\n};\n"],"names":["MainProducts","progress","ProgressBar","size","color","className","delay","setTimeout","finish","useEffect","window","scrollTo","id","useParams","console","log","_jsxs","Box","as","p","maxW","m","mt","children","_jsx","Link","to","Button","Heading","textAlign","display","gap","flexWrap","justifyContent","alignItems","SingleProductCard","heading","icon","first","href","React","e","start","t","i","o","Object","assign","s","a","position","top","left","margin","padding","border","borderRadius","backgroundColor","zIndex","height","opacity","width","d","transition","l","n","boxShadow","this","parentNode","removeChild","document","body","appendChild","createElement","style","clearTimeout","scrollTop","_createContext","createContext","strict","name","_createContext2","_slicedToArray","useButtonGroup","ButtonIcon","props","rest","_objectWithoutProperties","_excluded","_children","isValidElement","cloneElement","focusable","_className","cx","jsx","chakra","_objectSpread","alignSelf","flexShrink","displayName","ButtonSpinner","label","placement","_props$spacing","spacing","_props$children","Spinner","__css","marginProp","spinnerStyles","useMemo","_objectSpread2","_defineProperty","forwardRef","ref","group","styles","useStyleConfig","_omitThemingProps","omitThemingProps","_omitThemingProps$isD","isDisabled","isLoading","isActive","leftIcon","rightIcon","loadingText","_omitThemingProps$ico","iconSpacing","type","spinner","_omitThemingProps$spi","spinnerPlacement","buttonStyles","_focus","appearance","userSelect","whiteSpace","verticalAlign","outline","_useButtonType","value","_useState","useState","_useState2","isButton","setIsButton","useCallback","node","tagName","useButtonType","_ref","defaultType","contentProps","jsxs","useMergeRefs","dataAttr","disabled","ButtonContent","Fragment","marginEnd","marginStart","mergeRefs","_len","arguments","length","refs","Array","_key","forEach","current","error","Error","concat","assignRef","_len2","_key2","apply"],"sourceRoot":""}