{"version":3,"file":"static/js/918.77b050f7.chunk.js","mappings":"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","sources":["Components/Home/About-us/index.jsx","../node_modules/@chakra-ui/button/dist/chunk-DGWZA2DU.mjs","../node_modules/@chakra-ui/button/dist/chunk-HCASMTTF.mjs","../node_modules/@chakra-ui/button/dist/chunk-HNNHG6RU.mjs","../node_modules/@chakra-ui/button/dist/chunk-NAA7TEES.mjs","../node_modules/@chakra-ui/button/dist/chunk-FRFD4OXU.mjs","../node_modules/@chakra-ui/image/dist/chunk-QBIO4VEB.mjs","../node_modules/@chakra-ui/image/dist/chunk-HR33I6FK.mjs","../node_modules/@chakra-ui/image/dist/chunk-E77276RR.mjs","../node_modules/@chakra-ui/layout/dist/chunk-B2MGPQRJ.mjs","../node_modules/@chakra-ui/layout/dist/chunk-P74GIWPW.mjs","../node_modules/@chakra-ui/layout/dist/chunk-SRMZVY4F.mjs","../node_modules/@chakra-ui/react-use-merge-refs/dist/index.mjs"],"sourcesContent":["import React from 'react';\r\nimport './index.css';\r\nimport {\r\n  Box,\r\n  Container,\r\n  // Flex,\r\n  Heading,\r\n  // Input,\r\n  // InputGroup,\r\n  // InputRightAddon,\r\n  // Avatar,\r\n  // keyframes,\r\n  // SimpleGrid,\r\n  Button,\r\n  Image,\r\n  // Icon,\r\n  // Stack,\r\n  Text,\r\n  // useColorModeValue,\r\n} from '@chakra-ui/react';\r\nimport { AiOutlineArrowRight } from 'react-icons/ai';\r\nimport image from \"../../../assets/aboutus.jpg\"\r\nconst About = () => {\r\n  return (\r\n    <Box className=\"MainAbout\" as=\"section\">\r\n      <Container p={2} maxW={'6xl'} mt={1}>\r\n        <Box className=\"mainBoxAbout\">\r\n          <Box className=\"firstBoxAbout\">\r\n            <Heading fontSize={{ base: '2xl', sm: '4xl' }} fontWeight={'bold'}>\r\n              A little bit about us\r\n            </Heading>\r\n            <Text>\r\n              Lorem ipsum dolor, sit amet consectetur adipisicing elit. Sunt\r\n              tenetur debitis cumque praesentium adipisci, quod deserunt beatae\r\n              commodi est, temporibus esse assumenda sapiente placeat magnam\r\n              nostrum dicta pariatur laboriosam at.\r\n            </Text>\r\n            {/* <Box display=\"flex\" justifyContent=\"center\"> */}\r\n            <Button\r\n              textAlign=\"right\"\r\n              color=\"white\"\r\n              display=\"flex\"\r\n              gap=\"13px\"\r\n              background=\"#6876e2\"\r\n              w={150}\r\n              className=\"buttonSubmit\"\r\n              h={50}\r\n              borderRadius={5}\r\n              variant=\"outline\"\r\n            >\r\n              Know more <AiOutlineArrowRight className='svgaioutline' />\r\n            </Button>\r\n            {/* </Box> */}\r\n          </Box>\r\n          <Box className=\"secondBoxAbout\">\r\n            <Image loading=\"lazy\"\r\n              src={image}\r\n              alt=\"About us product Image\"\r\n              className=\"aboutusImage\"\r\n            />\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(About);\r\n","// src/button-context.ts\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [ButtonGroupProvider, useButtonGroup] = createContext({\n  strict: false,\n  name: \"ButtonGroupContext\"\n});\n\nexport {\n  ButtonGroupProvider,\n  useButtonGroup\n};\n","// src/button-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { cloneElement, isValidElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonIcon(props) {\n  const { children, className, ...rest } = props;\n  const _children = isValidElement(children) ? cloneElement(children, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : children;\n  const _className = cx(\"chakra-button__icon\", className);\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      display: \"inline-flex\",\n      alignSelf: \"center\",\n      flexShrink: 0,\n      ...rest,\n      className: _className,\n      children: _children\n    }\n  );\n}\nButtonIcon.displayName = \"ButtonIcon\";\n\nexport {\n  ButtonIcon\n};\n","// src/button-spinner.tsx\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonSpinner(props) {\n  const {\n    label,\n    placement,\n    spacing = \"0.5rem\",\n    children = /* @__PURE__ */ jsx(Spinner, { color: \"currentColor\", width: \"1em\", height: \"1em\" }),\n    className,\n    __css,\n    ...rest\n  } = props;\n  const _className = cx(\"chakra-button__spinner\", className);\n  const marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\";\n  const spinnerStyles = useMemo(\n    () => ({\n      display: \"flex\",\n      alignItems: \"center\",\n      position: label ? \"relative\" : \"absolute\",\n      [marginProp]: label ? spacing : 0,\n      fontSize: \"1em\",\n      lineHeight: \"normal\",\n      ...__css\n    }),\n    [__css, label, marginProp, spacing]\n  );\n  return /* @__PURE__ */ jsx(chakra.div, { className: _className, ...rest, __css: spinnerStyles, children });\n}\nButtonSpinner.displayName = \"ButtonSpinner\";\n\nexport {\n  ButtonSpinner\n};\n","import {\n  useButtonType\n} from \"./chunk-FRFD4OXU.mjs\";\nimport {\n  useButtonGroup\n} from \"./chunk-DGWZA2DU.mjs\";\nimport {\n  ButtonIcon\n} from \"./chunk-HCASMTTF.mjs\";\nimport {\n  ButtonSpinner\n} from \"./chunk-HNNHG6RU.mjs\";\n\n// src/button.tsx\nimport { useMergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar Button = forwardRef((props, ref) => {\n  const group = useButtonGroup();\n  const styles = useStyleConfig(\"Button\", { ...group, ...props });\n  const {\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    isLoading,\n    isActive,\n    children,\n    leftIcon,\n    rightIcon,\n    loadingText,\n    iconSpacing = \"0.5rem\",\n    type,\n    spinner,\n    spinnerPlacement = \"start\",\n    className,\n    as,\n    ...rest\n  } = omitThemingProps(props);\n  const buttonStyles = useMemo(() => {\n    const _focus = { ...styles == null ? void 0 : styles[\"_focus\"], zIndex: 1 };\n    return {\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      userSelect: \"none\",\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\",\n      outline: \"none\",\n      ...styles,\n      ...!!group && { _focus }\n    };\n  }, [styles, group]);\n  const { ref: _ref, type: defaultType } = useButtonType(as);\n  const contentProps = { rightIcon, leftIcon, iconSpacing, children };\n  return /* @__PURE__ */ jsxs(\n    chakra.button,\n    {\n      ref: useMergeRefs(ref, _ref),\n      as,\n      type: type != null ? type : defaultType,\n      \"data-active\": dataAttr(isActive),\n      \"data-loading\": dataAttr(isLoading),\n      __css: buttonStyles,\n      className: cx(\"chakra-button\", className),\n      ...rest,\n      disabled: isDisabled || isLoading,\n      children: [\n        isLoading && spinnerPlacement === \"start\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--start\",\n            label: loadingText,\n            placement: \"start\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        ),\n        isLoading ? loadingText || /* @__PURE__ */ jsx(chakra.span, { opacity: 0, children: /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }) }) : /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }),\n        isLoading && spinnerPlacement === \"end\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--end\",\n            label: loadingText,\n            placement: \"end\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        )\n      ]\n    }\n  );\n});\nButton.displayName = \"Button\";\nfunction ButtonContent(props) {\n  const { leftIcon, rightIcon, children, iconSpacing } = props;\n  return /* @__PURE__ */ jsxs(Fragment, { children: [\n    leftIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginEnd: iconSpacing, children: leftIcon }),\n    children,\n    rightIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginStart: iconSpacing, children: rightIcon })\n  ] });\n}\n\nexport {\n  Button\n};\n","// src/use-button-type.tsx\nimport { useCallback, useState } from \"react\";\nfunction useButtonType(value) {\n  const [isButton, setIsButton] = useState(!value);\n  const refCallback = useCallback((node) => {\n    if (!node)\n      return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  const type = isButton ? \"button\" : void 0;\n  return { ref: refCallback, type };\n}\n\nexport {\n  useButtonType\n};\n","// src/native-image.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar NativeImage = forwardRef(function NativeImage2(props, ref) {\n  const { htmlWidth, htmlHeight, alt, ...rest } = props;\n  return /* @__PURE__ */ jsx(\"img\", { width: htmlWidth, height: htmlHeight, ref, alt, ...rest });\n});\nNativeImage.displayName = \"NativeImage\";\n\nexport {\n  NativeImage\n};\n","// src/use-image.ts\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nfunction useImage(props) {\n  const {\n    loading,\n    src,\n    srcSet,\n    onLoad,\n    onError,\n    crossOrigin,\n    sizes,\n    ignoreFallback\n  } = props;\n  const [status, setStatus] = useState(\"pending\");\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  const imageRef = useRef();\n  const load = useCallback(() => {\n    if (!src)\n      return;\n    flush();\n    const img = new Image();\n    img.src = src;\n    if (crossOrigin)\n      img.crossOrigin = crossOrigin;\n    if (srcSet)\n      img.srcset = srcSet;\n    if (sizes)\n      img.sizes = sizes;\n    if (loading)\n      img.loading = loading;\n    img.onload = (event) => {\n      flush();\n      setStatus(\"loaded\");\n      onLoad == null ? void 0 : onLoad(event);\n    };\n    img.onerror = (error) => {\n      flush();\n      setStatus(\"failed\");\n      onError == null ? void 0 : onError(error);\n    };\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n  const flush = () => {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n  useSafeLayoutEffect(() => {\n    if (ignoreFallback)\n      return void 0;\n    if (status === \"loading\") {\n      load();\n    }\n    return () => {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  return ignoreFallback ? \"loaded\" : status;\n}\nvar shouldShowFallbackImage = (status, fallbackStrategy) => status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\" || status === \"failed\" && fallbackStrategy === \"onError\";\n\nexport {\n  useImage,\n  shouldShowFallbackImage\n};\n","import {\n  NativeImage\n} from \"./chunk-QBIO4VEB.mjs\";\nimport {\n  shouldShowFallbackImage,\n  useImage\n} from \"./chunk-HR33I6FK.mjs\";\n\n// src/image.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\n\n// ../../utilities/object-utils/src/index.ts\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key];\n    }\n  }\n  return clone;\n}\n\n// src/image.tsx\nimport { jsx } from \"react/jsx-runtime\";\nvar Image = forwardRef(function Image2(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    srcSet,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    fallbackStrategy = \"beforeLoadOrError\",\n    referrerPolicy,\n    ...rest\n  } = props;\n  const providedFallback = fallbackSrc !== void 0 || fallback !== void 0;\n  const shouldIgnoreFallbackImage = loading != null || ignoreFallback || !providedFallback;\n  const status = useImage({\n    ...props,\n    ignoreFallback: shouldIgnoreFallbackImage\n  });\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy);\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"])\n  };\n  if (showFallbackImage) {\n    if (fallback)\n      return fallback;\n    return /* @__PURE__ */ jsx(\n      chakra.img,\n      {\n        as: NativeImage,\n        className: \"chakra-image__placeholder\",\n        src: fallbackSrc,\n        ...shared\n      }\n    );\n  }\n  return /* @__PURE__ */ jsx(\n    chakra.img,\n    {\n      as: NativeImage,\n      src,\n      srcSet,\n      crossOrigin,\n      loading,\n      referrerPolicy,\n      className: \"chakra-image\",\n      ...shared\n    }\n  );\n});\nImage.displayName = \"Image\";\n\nexport {\n  Image\n};\n","// src/heading.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Heading = forwardRef(function Heading2(props, ref) {\n  const styles = useStyleConfig(\"Heading\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.h2,\n    {\n      ref,\n      className: cx(\"chakra-heading\", props.className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nHeading.displayName = \"Heading\";\n\nexport {\n  Heading\n};\n","// src/text.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Text = forwardRef(function Text2(props, ref) {\n  const styles = useStyleConfig(\"Text\", props);\n  const { className, align, decoration, casing, ...rest } = omitThemingProps(props);\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing\n  });\n  return /* @__PURE__ */ jsx(\n    chakra.p,\n    {\n      ref,\n      className: cx(\"chakra-text\", props.className),\n      ...aliasedProps,\n      ...rest,\n      __css: styles\n    }\n  );\n});\nText.displayName = \"Text\";\n\nexport {\n  Text\n};\n","// src/container.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Container = forwardRef(function Container2(props, ref) {\n  const { className, centerContent, ...rest } = omitThemingProps(props);\n  const styles = useStyleConfig(\"Container\", props);\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-container\", className),\n      ...rest,\n      __css: {\n        ...styles,\n        ...centerContent && {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        }\n      }\n    }\n  );\n});\nContainer.displayName = \"Container\";\n\nexport {\n  Container\n};\n","// src/index.ts\nimport { useMemo } from \"react\";\nfunction assignRef(ref, value) {\n  if (ref == null)\n    return;\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  return (node) => {\n    refs.forEach((ref) => {\n      assignRef(ref, node);\n    });\n  };\n}\nfunction useMergeRefs(...refs) {\n  return useMemo(() => mergeRefs(...refs), refs);\n}\nexport {\n  assignRef,\n  mergeRefs,\n  useMergeRefs\n};\n"],"names":["About","_jsx","Box","className","as","children","Container","p","maxW","mt","_jsxs","Heading","fontSize","base","sm","fontWeight","Text","Button","textAlign","color","display","gap","background","w","h","borderRadius","variant","AiOutlineArrowRight","Image","loading","src","image","alt","React","_createContext","createContext","strict","name","_createContext2","_slicedToArray","useButtonGroup","ButtonIcon","props","rest","_objectWithoutProperties","_excluded","_children","isValidElement","cloneElement","focusable","_className","cx","jsx","chakra","_objectSpread","alignSelf","flexShrink","displayName","ButtonSpinner","label","placement","_props$spacing","spacing","_props$children","Spinner","width","height","__css","marginProp","spinnerStyles","useMemo","_objectSpread2","alignItems","position","_defineProperty","forwardRef","ref","group","styles","useStyleConfig","_omitThemingProps","omitThemingProps","_omitThemingProps$isD","isDisabled","isLoading","isActive","leftIcon","rightIcon","loadingText","_omitThemingProps$ico","iconSpacing","type","spinner","_omitThemingProps$spi","spinnerPlacement","buttonStyles","_focus","zIndex","appearance","justifyContent","userSelect","whiteSpace","verticalAlign","outline","_useButtonType","value","_useState","useState","_useState2","isButton","setIsButton","useCallback","node","tagName","useButtonType","_ref","defaultType","contentProps","jsxs","useMergeRefs","dataAttr","disabled","opacity","ButtonContent","Fragment","marginEnd","marginStart","NativeImage","htmlWidth","htmlHeight","fallbackSrc","fallback","srcSet","align","fit","ignoreFallback","crossOrigin","_props$fallbackStrate","fallbackStrategy","referrerPolicy","shouldIgnoreFallbackImage","status","onLoad","onError","sizes","setStatus","useEffect","imageRef","useRef","load","flush","img","srcset","onload","event","onerror","error","current","useSafeLayoutEffect","useImage","showFallbackImage","shouldShowFallbackImage","shared","objectFit","objectPosition","object","_step","keysToOmit","arguments","length","undefined","clone","Object","assign","_iterator","_createForOfIteratorHelper","s","n","done","key","err","e","f","omit","decoration","casing","aliasedProps","compact","textDecoration","textTransform","centerContent","flexDirection","mergeRefs","_len","refs","Array","_key","forEach","Error","concat","assignRef","_len2","_key2","apply"],"sourceRoot":""}