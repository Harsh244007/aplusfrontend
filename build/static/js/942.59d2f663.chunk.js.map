{"version":3,"file":"static/js/942.59d2f663.chunk.js","mappings":"0MAKMA,EAAa,SAAHC,GAQZ,IAHG,IAJHC,EAAUD,EAAVC,WACAC,EAAYF,EAAZE,aACAC,EAAcH,EAAdG,eACAC,EAAWJ,EAAXI,YAEIC,EAAQ,GAEHC,EAAI,EAAGA,GAAKC,KAAKC,KAAKP,EAAaC,GAAeI,IACvDD,EAAMI,KAAKH,GAEf,OACII,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CAACC,UAAU,aAAYC,SACtBR,EAAMS,KAAI,SAACC,EAAMC,GACd,OACIN,EAAAA,EAAAA,KAACO,EAAAA,EAAM,CAEHC,QAAS,kBAAMf,EAAeY,EAAK,EACnCH,UAAWG,GAAQX,EAAc,SAAW,GAAGS,SAC9CE,GAHIC,EAMjB,KAGZ,EAEA,EAAeG,EAAAA,KAAWpB,E,+LCRpBqB,EAAoBD,EAAAA,MAAW,SAAAnB,GAA2D,IAAxDqB,EAAOrB,EAAPqB,QAAsBC,GAAFtB,EAAXuB,YAAiBvB,EAAJsB,MAAME,EAAIxB,EAAJwB,KAAIC,EAAAzB,EAAE0B,UAAAA,OAAS,IAAAD,GAAMA,EAGvF,OACEf,EAAAA,EAAAA,KAAAiB,EAAAA,SAAA,CAAAd,SACEa,GAkCFhB,EAAAA,EAAAA,KAAA,KAAGc,KAAMA,EAAMI,OAAO,SAAQf,UAC5BgB,EAAAA,EAAAA,MAAClB,EAAAA,GAAG,CACJmB,KAAK,QAELlB,UAAU,sBAEVmB,aAAa,MACbC,EAAG,IACHC,EAAE,QAEFC,SAAS,SACTrB,SAAA,EAEAH,EAAAA,EAAAA,KAACyB,EAAAA,EAAK,CAACC,MAAO,SAAUC,EAAG,EAAGC,WAAU,UAAaC,OAAQ,EAAE1B,UAC7DH,EAAAA,EAAAA,KAAC8B,EAAAA,EAAK,CAACC,QAAQ,OACbC,IAAKpB,EACLW,EAAE,QACFU,OAAO,QACPC,UAAU,UACVC,IAAKxB,EACLU,aAAc,OAQlBrB,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CAACmC,GAAI,EAAEjC,UACTH,EAAAA,EAAAA,KAACqC,EAAAA,EAAO,CAACC,SAAU,GAAIC,WAAY,IAAKC,KAAK,KAAIrC,SAC9CQ,YA/DPX,EAAAA,EAAAA,KAACyC,EAAAA,GAAI,CAACC,GAAI5B,EAAKX,UACfgB,EAAAA,EAAAA,MAAClB,EAAAA,GAAG,CACFmB,KAAK,QAELlB,UAAU,sBAEVmB,aAAa,MACbC,EAAG,IACHC,EAAE,QAEFC,SAAS,SACTrB,SAAA,EAEAH,EAAAA,EAAAA,KAACyB,EAAAA,EAAK,CAACvB,UAAU,8BAA8BwB,MAAO,SAAUC,EAAG,EAAGC,WAAU,UAAaC,OAAQ,EAAE1B,UACrGH,EAAAA,EAAAA,KAAC8B,EAAAA,EAAK,CAACC,QAAQ,OACbC,IAAKpB,EACLW,EAAE,QACFU,OAAO,QACPC,UAAU,UACVC,IAAKxB,EACLU,aAAc,OAIlBrB,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CAACC,UAAU,aACfF,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CAACC,UAAU,+BAA+BkC,GAAI,EAAEjC,UAClDH,EAAAA,EAAAA,KAACqC,EAAAA,EAAO,CAACb,SAAU,UAAWmB,WAAY,SAAUV,OAAQ,OAAQK,SAAU,GAAIC,WAAY,IAAKC,KAAK,KAAIrC,SACzGQ,YA2CX,IACMiC,EAAwBnC,EAAAA,MAAW,SAAAoC,GAAe,IAAZjC,EAAIiC,EAAJjC,KAG1C,OACEO,EAAAA,EAAAA,MAAClB,EAAAA,GAAG,CACFmB,KAAK,QAELlB,UAAU,sBAEVmB,aAAa,OACbE,EAAE,QAEFC,SAAS,SACTrB,SAAA,EAEAH,EAAAA,EAAAA,KAACqC,EAAAA,EAAO,CAACnC,UAAU,oBAAmBC,SAAC,oBACvCgB,EAAAA,EAAAA,MAAC2B,EAAAA,EAAI,CAAC5C,UAAU,kBAAiBC,SAAA,CAAC,WACvB,IACR4C,EAAAA,EAASC,QAAShD,EAAAA,EAAAA,KAACiD,EAAAA,IAAmB,KAAMjD,EAAAA,EAAAA,KAACkD,EAAAA,IAAkB,QAGlElD,EAAAA,EAAAA,KAAC8B,EAAAA,EAAK,CAACC,QAAQ,OACbC,IAAKpB,EACLW,EAAE,QACFU,OAAO,QACPC,UAAU,UAEVb,aAAc,MActB,G,+QC3HM8B,EAAqB,WACzB,IAsBMC,EAtBNC,GAAwBC,EAAAA,EAAAA,YAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAAmCC,EAAAA,EAAAA,MAA7BC,EAAEF,EAAFE,GAAIC,EAAKH,EAALG,MAAOC,EAAIJ,EAAJI,KAAMC,EAAOL,EAAPK,QACjBC,EAAG,GAAAC,OAAMnB,EAAAA,EAASoB,QAAO,0BAAAD,OAAyBL,GACxDO,GAQIC,EAAAA,EAAAA,UAAS,CAAC,sBAAoBC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAG,OAAA,SAC3BC,EAAAA,EAAMC,IAAIf,GAAKgB,MAAK,SAAAC,GACzB,OAAOA,EAASC,KAAKA,KAAK,EAC5B,KAAE,wBAAAR,EAAAS,OAAA,GAAAX,EAAA,MAVFU,EAAIf,EAAJe,KACAE,EAAOjB,EAAPiB,QAEAC,EAAYlB,EAAZkB,eASFC,EAAAA,EAAAA,YAAU,WACRF,IACAG,OAAOC,SAAS,EAAG,EAErB,GAAG,CAAC1B,EAAKsB,IACJF,KAEHO,aAAatC,GACbA,EAAQuC,YAAW,WACjBN,GACF,GAAG,MAEAxB,IACHA,EAAK,IAEP,IAYM+B,EAZAC,EAAI,GAAA3B,OAAMnB,EAAAA,EAASoB,QAAO,oBAAAD,OAAmBJ,GACnDgC,GAIIzB,EAAAA,EAAAA,UAAS,CAAC,0BAAwBC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAuB,IAAA,OAAAxB,EAAAA,EAAAA,KAAAG,MAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAAAmB,EAAAlB,OAAA,SAC/BC,EAAAA,EAAMC,IAAIa,GAAMZ,MAAK,SAAAC,GAC1B,OAAOA,EAASC,KAAKA,IACvB,KAAE,wBAAAa,EAAAZ,OAAA,GAAAW,EAAA,MANIE,EAAKH,EAAXX,KACSe,EAAQJ,EAAjBT,QAQGY,IAEHP,aAAaE,GACbA,EAASD,YAAW,WAClBO,GACF,GAAG,MAEL,IAIIC,EAJJC,GAA0B9C,EAAAA,EAAAA,UAAS,GAAE+C,GAAA7C,EAAAA,EAAAA,GAAA4C,EAAA,GAA9BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEhBG,EADe,EACHF,EACZG,EAAaD,EAFE,EAIjBP,IACFE,EAAeF,EAAMS,MAAMD,EAAYD,IAEzC,IAAIG,GAAQC,EAAAA,EAAAA,IAAkB,aAAc,cAC5C,GAAIzB,IAAS1B,EAAM,CAQjBC,GANWmD,EAAAA,EAAAA,GAAO1B,EAAK2B,SAASC,SADlB,sBAEsB3G,KAAI,SAAA4G,GACtC,IAAMC,EAAQD,EAAM,GAEpB,MADwB,IAAA9C,OAAO+C,EAAK,IAEtC,KAEAC,QAAQC,IACNhC,EAAK2B,SAASE,MAAM,qBAAqB,GACzC,yBAEJ,CACA,OACE7F,EAAAA,EAAAA,MAAClB,EAAAA,GAAG,CACFC,UAAU,sBACVkH,GAAG,UACHC,cAAe,SACf1F,EAAG,OACHP,KAAM,SACNkG,EAAG,OACHlF,GAAI,QAAQjC,SAAA,EAEZH,EAAAA,EAAAA,KAACyC,EAAAA,GAAI,CACHvC,UAAU,aACVwC,GAAE,aAAAwB,OAAeJ,EAAK,KAAAI,OAAIiB,GAAQA,EAAKoC,UAAWpH,UAElDH,EAAAA,EAAAA,KAACO,EAAAA,EAAM,CACLiH,YAAa,UACbC,YAAWtC,IAASG,GAAgBH,EAAKoC,UAAwBpH,SAClE,eAIHH,EAAAA,EAAAA,KAACqC,EAAAA,EAAO,CAACqF,UAAW,SAASvH,SAC1BgF,IAASG,EAAeH,EAAKoC,SAAQ,WAAArD,OAAcH,KAErDoB,GAAQA,GAAQ,KAAOG,GACtBnE,EAAAA,EAAAA,MAAClB,EAAAA,GAAG,CACF0H,QAAS,OACTC,IAAK,OACLC,SAAU,OACVC,eAAgB,eAChBC,WAAY,SAAS5H,SAAA,EAErBH,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CAACsB,EAAG,QAASD,EAAG,QAAS0G,OAAQ,qBAAqB7H,UACxDH,EAAAA,EAAAA,KAAC8B,EAAAA,EAAK,CACJP,EAAG,QACHY,IAAKgD,EAAK8C,UACV/F,UAAW,UACXZ,EAAG,QACHS,QAAQ,OACRC,IAAG,GAAAkC,OAAKnB,EAAAA,EAASmF,UAAS,KAAAhE,OAAIiB,EAAK8C,gBAIvCjI,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CAACC,UAAU,YAAYqB,EAAG,QAAQpB,UACpCgB,EAAAA,EAAAA,MAAClB,EAAAA,GAAG,CAAAE,SAAA,EACFH,EAAAA,EAAAA,KAAC8C,EAAAA,EAAI,CACHP,WAAY,OACZD,SAAU,CAAE6F,KAAM,OAAQC,GAAI,QAC9BzB,MAAOA,EAEP0B,cAAe,YACfC,GAAI,IAAInI,SACT,qBAIDH,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CAACsI,QAAS,EAAEpI,SACbsD,GACCzD,EAAAA,EAAAA,KAAAiB,EAAAA,SAAA,CAAAd,SACGsD,EAAKrD,KAAI,SAACoI,EAAG5I,GACZ,GAAIA,EAAI,GAAK,GAAU,GAALA,EAEhB,OADAsH,QAAQC,IAAIqB,EAAG/E,EAAK7D,EAAI,GAAI,cAE1BuB,EAAAA,EAAAA,MAAClB,EAAAA,GAAG,CAAAE,SAAA,EACFH,EAAAA,EAAAA,KAAC8C,EAAAA,EAAI,CAACsE,GAAI,OAAQ7E,WAAY,OAAOpC,SAClCsD,EAAK7D,EAAI,GAAG6I,QAAQ,OAAQ,MACvB,IACPhF,EAAK7D,EAAI,GAAG6I,QAAQ,OAAQ,MAJrB7I,EAQhB,MAGF,cA6CVI,EAAAA,EAAAA,KAAC0I,EAAAA,EAAQ,CAACzG,OAAQ,IAAK0G,MAAM,SAE9B1C,GAASA,GAAS,IACjB9E,EAAAA,EAAAA,MAAClB,EAAAA,GAAG,CAACqH,EAAG,OAAQM,IAAK,OAAOzH,SAAA,EAC1BH,EAAAA,EAAAA,KAACqC,EAAAA,EAAO,CAAAlC,SAAC,gCACTH,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CACF0H,QAAS,OACTE,SAAU,OACVD,IAAK,OACLE,eAAgB,eAAe3H,SAE9BgG,EAAa/F,KAAI,SAAAoI,GAChBtB,QAAQC,IAAIqB,EAAG,yBACf,IAAIzE,EAAOyE,EAAEjB,SAASkB,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAEpD,OADAvB,QAAQC,IAAIpD,EAAMyE,EAAEjB,SAAU,2BAE5BvH,EAAAA,EAAAA,KAACU,EAAAA,EAAiB,CAChBM,WAAW,EACXL,QAAS6H,EAAEjB,SAAWiB,EAAEjB,SAAW,cACnC3G,KAAI,GAAAsD,OAAKnB,EAAAA,EAASmF,UAAS,KAAAhE,OAAIsE,EAAEP,WACjCnH,KAAI,mBAAAoD,OAAqBsE,EAAE1E,MAAK,KAAAI,OAAIsE,EAAEI,WAAU,KAAA1E,OAAIH,EAAI,KAAAG,OAAIF,IAGlE,MAEDiC,GAASA,GAAS,IACjBjG,EAAAA,EAAAA,KAACX,EAAAA,EAAU,CACTE,WAAY0G,GAASA,EAAM4C,OAC3BrJ,aAzKS,EA0KTC,eAAgB8G,EAChB7G,YAAa4G,KAGftG,EAAAA,EAAAA,KAAC0I,EAAAA,EAAQ,CAACzG,OAAQ,GAAI0G,MAAM,aAIhC3I,EAAAA,EAAAA,KAAC0I,EAAAA,EAAQ,CAACzG,OAAQ,IAAK0G,MAAM,WAIrC,EACA,EAAelI,EAAAA,KAAW0C,E","sources":["Components/Common/pagination.jsx","Components/Home/FeaturedProducts/singleproduct.jsx","Components/SingleMainProduct/index.jsx"],"sourcesContent":["import { Box, Button } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nimport \"./common.css\";\r\n\r\nconst Pagination = ({\r\n    totalPosts,\r\n    postsPerPage,\r\n    setCurrentPage,\r\n    currentPage,\r\n}) => {\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n        pages.push(i);\r\n    }\r\n    return (\r\n        <Box className='pagination'>\r\n            {pages.map((page, index) => {\r\n                return (\r\n                    <Button\r\n                        key={index}\r\n                        onClick={() => setCurrentPage(page)}\r\n                        className={page == currentPage ? \"active\" : \"\"}>\r\n                        {page}\r\n                    </Button>\r\n                );\r\n            })}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default React.memo(Pagination);","import React from 'react';\r\nimport './index.css';\r\nimport {\r\n  Box,\r\n  // Container,\r\n  // Flex,\r\n  Heading,\r\n  // Input,\r\n  // InputGroup,\r\n  // InputRightAddon,\r\n  // Avatar,\r\n  // keyframes,\r\n  // SimpleGrid,\r\n  // Button,\r\n  Image,\r\n  // Icon,\r\n  Stack,\r\n  Text,\r\n  // useColorModeValue,\r\n} from '@chakra-ui/react';\r\n\r\nimport Appstore from '../../../Store/Appstore';\r\nimport { AiOutlineArrowRight, AiOutlineArrowDown } from 'react-icons/ai';\r\nimport { Link } from 'react-router-dom';\r\nconst SingleProductCard = React.memo(({ heading, description, icon, href ,referLink=false}) => {\r\n  const color = 'teal';\r\n\r\n  return (\r\n    <>\r\n    {!referLink?\r\n    <Link to={href}>\r\n    <Box\r\n      maxW=\"200px\"\r\n      // w={'full'}\r\n      className=\"featueProductsCard1\"\r\n      // borderWidth=\"1px\"\r\n      borderRadius=\"6px\"\r\n      h={285}\r\n      w=\"219px\"\r\n      // h=\"236px\"\r\n      overflow=\"hidden\"\r\n      // p={5}\r\n    >\r\n      <Stack className='featueProductsCard1FirstBox' align={'center'} p={4} background={`#F8FBFD`} rowGap={5}>\r\n        <Image loading=\"lazy\"\r\n          src={icon}\r\n          w=\"179px\"\r\n          height=\"196px\"\r\n          objectFit=\"contain\"\r\n          alt={heading}\r\n          borderRadius={0}\r\n          // className=\"featuredprocutsimage\"\r\n        />\r\n      </Stack>\r\n      <Box className=\"overlay\"></Box>\r\n      <Box className='featueProductsCard1SecondBox' mt={2}>\r\n        <Heading overflow={\"visible\"} whiteSpace={\"nowrap\"} height={\"auto\"} fontSize={20} fontWeight={600} size=\"md\">\r\n          {heading}\r\n        </Heading>\r\n      </Box>\r\n    </Box>\r\n    </Link>:\r\n    \r\n    <a href={href} target=\"_blank\">\r\n      <Box\r\n      maxW=\"200px\"\r\n      // w={'full'}\r\n      className=\"featueProductsCard1\"\r\n      // borderWidth=\"1px\"\r\n      borderRadius=\"6px\"\r\n      h={285}\r\n      w=\"219px\"\r\n      // h=\"236px\"\r\n      overflow=\"hidden\"\r\n      // p={5}\r\n    >\r\n      <Stack align={'center'} p={4} background={`#F8FBFD`} rowGap={5}>\r\n        <Image loading=\"lazy\"\r\n          src={icon}\r\n          w=\"179px\"\r\n          height=\"196px\"\r\n          objectFit=\"contain\"\r\n          alt={heading}\r\n          borderRadius={0}\r\n          // className=\"featuredprocutsimage\"\r\n        />\r\n        {/* <Button variant={'solid'} size={'md'}>\r\n          View Product\r\n        </Button> */}\r\n      </Stack>\r\n\r\n      <Box mt={2}>\r\n        <Heading fontSize={20} fontWeight={600} size=\"md\">\r\n          {heading}\r\n        </Heading>\r\n      </Box>\r\n    </Box>\r\n      </a>}\r\n    </>\r\n  );\r\n});\r\nconst CategoriesProductCard = React.memo(({ icon }) => {\r\n  const color = 'teal';\r\n\r\n  return (\r\n    <Box\r\n      maxW=\"219px\"\r\n      // w={'full'}\r\n      className=\"featueProductsCard2\"\r\n      // borderWidth=\"1px\"\r\n      borderRadius=\"16px\"\r\n      w=\"219px\"\r\n      // h=\"236px\"\r\n      overflow=\"hidden\"\r\n      // p={5}\r\n    >\r\n      <Heading className=\"headerfeatureprod\">All Categories</Heading>\r\n      <Text className=\"textfeatureprod\">\r\n        View All{' '}\r\n        {Appstore.device ? <AiOutlineArrowRight /> : <AiOutlineArrowDown />}\r\n      </Text>\r\n      {/* <Stack align={'center'} p={5} background={`#F8FBFD`} rowGap={5}> */}\r\n      <Image loading=\"lazy\"\r\n        src={icon}\r\n        w=\"219px\"\r\n        height=\"284px\"\r\n        objectFit=\"contain\"\r\n        // alt={heading}\r\n        borderRadius={0}\r\n        // className=\"featuredprocutsimage\"\r\n      />\r\n      {/* <Button variant={'solid'} size={'md'}>\r\n          View Product\r\n        </Button> */}\r\n      {/* </Stack> */}\r\n\r\n      {/* <Box mt={2}> */}\r\n\r\n      {/* <Heading fontSize={20} fontWeight={600} size=\"md\">{heading}</Heading> */}\r\n      {/* </Box> */}\r\n    </Box>\r\n  );\r\n});\r\n\r\nexport { SingleProductCard, CategoriesProductCard };\r\n","import React, { useEffect, useState } from 'react';\r\nimport './index.css';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Heading,\r\n  Image,\r\n  // List,\r\n  // ListItem,\r\n  Skeleton,\r\n  Text,\r\n  useColorModeValue,\r\n} from '@chakra-ui/react';\r\nimport { SingleProductCard } from '../Home/FeaturedProducts/singleproduct';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Pagination from '../Common/pagination';\r\nimport Appstore from '../../Store/Appstore';\r\nimport { useQuery } from 'react-query';\r\nimport axios from 'axios';\r\nconst MainProductDetails = () => {\r\n  const [desc, setDesc] = useState();\r\n  let { id, catid, name, catName } = useParams();\r\n  const url = `${Appstore.apilink}/returnProductDetails/${id}`;\r\n  const {\r\n    data,\r\n    refetch,\r\n    // status,\r\n    isRefetching,\r\n    // isPreviousData,\r\n    // isFetchedAfterMount,\r\n    // isLoading,\r\n  } = useQuery(['getSingleProducts'], async () => {\r\n    return axios.get(url).then(response => {\r\n      return response.data.data[0];\r\n    });\r\n  });\r\n  useEffect(() => {\r\n    refetch();\r\n    window.scrollTo(0, 0);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [name,refetch]);\r\n  if (!data) {\r\n    let timer;\r\n    clearTimeout(timer);\r\n    timer = setTimeout(() => {\r\n      refetch();\r\n    }, 4000);\r\n  }\r\n  if (!id) {\r\n    id = 50;\r\n  }\r\n  const url2 = `${Appstore.apilink}/returncategory/${catid}`;\r\n  const {\r\n    data: data2,\r\n    refetch: refetch2,\r\n    // isLoading: isloading2,\r\n  } = useQuery(['getMultipleCategories'], async () => {\r\n    return axios.get(url2).then(response => {\r\n      return response.data.data;\r\n    });\r\n  });\r\n\r\n  if (!data2) {\r\n    let timer2;\r\n    clearTimeout(timer2);\r\n    timer2 = setTimeout(() => {\r\n      refetch2();\r\n    }, 4000);\r\n  }\r\n  const [cpage, setCpage] = useState(1);\r\n  const postsPerPage = 4;\r\n  const lastposti = cpage * postsPerPage;\r\n  const firstposti = lastposti - postsPerPage;\r\n  let currentposts;\r\n  if (data2) {\r\n    currentposts = data2.slice(firstposti, lastposti);\r\n  }\r\n  let color = useColorModeValue('yellow.500', 'yellow.300');\r\n  if (data && !desc) {\r\n    const regex = /s:(\\d+):\"(.*?)\";/g;\r\n    let matches = [...data.pro_desc.matchAll(regex)];\r\n    const deserializedObjects = matches.map(match => {\r\n      const array = match[2];\r\n      const deserializedObject = `{${array}}`;\r\n      return deserializedObject;\r\n    });\r\n    setDesc(deserializedObjects);\r\n    console.log(\r\n      data.pro_desc.match(/s:(\\d+):\"(.*?)\";/g)[0],\r\n      'data of single product'\r\n    );\r\n  }\r\n  return (\r\n    <Box\r\n      className=\"mainSubProductsMain\"\r\n      as=\"section\"\r\n      flexDirection={'column'}\r\n      p={'20px'}\r\n      maxW={'1220px'}\r\n      m={'auto'}\r\n      mt={'100px'}\r\n    >\r\n      <Link\r\n        className=\"goBackMain\"\r\n        to={`/products/${catid}/${data && data.pro_name}`}\r\n      >\r\n        <Button\r\n          loadingText={'Loading'}\r\n          isLoading={data && !isRefetching && data.pro_name ? false : true}\r\n        >\r\n          Go Back\r\n        </Button>\r\n      </Link>\r\n      <Heading textAlign={'center'}>\r\n        {data && !isRefetching ? data.pro_name : `Loading ${name}`}\r\n      </Heading>\r\n      {data && data != [] && !isRefetching ? (\r\n        <Box\r\n          display={'flex'}\r\n          gap={'30px'}\r\n          flexWrap={'wrap'}\r\n          justifyContent={'space-around'}\r\n          alignItems={'center'}\r\n        >\r\n          <Box w={'350px'} h={'350px'} border={'2px dashed #dedede'}>\r\n            <Image\r\n              w={'346px'}\r\n              alt={data.pro_image}\r\n              objectFit={'contain'}\r\n              h={'346px'}\r\n              loading=\"lazy\"\r\n              src={`${Appstore.imageLink}/${data.pro_image}`}\r\n            />\r\n          </Box>\r\n\r\n          <Box className=\"secondBox\" w={'750px'}>\r\n            <Box>\r\n              <Text\r\n                fontWeight={'bold'}\r\n                fontSize={{ base: '16px', lg: '18px' }}\r\n                color={color}\r\n                // fontWeight={'500'}\r\n                textTransform={'uppercase'}\r\n                mb={'4'}\r\n              >\r\n                Product Details\r\n              </Text>\r\n\r\n              <Box spacing={2}>\r\n                {desc ? (\r\n                  <>\r\n                    {desc.map((e, i) => {\r\n                      if (i % 4 == 0 && i != 0) {\r\n                        console.log(e, desc[i - 3], 'main data');\r\n                        return (\r\n                          <Box key={i}>\r\n                            <Text as={'span'} fontWeight={'bold'}>\r\n                              {desc[i - 3].replace(/{|}/g, '')}\r\n                            </Text>{' '}\r\n                            {desc[i - 1].replace(/{|}/g, '')}\r\n                          </Box>\r\n                        );\r\n                      }\r\n                    })}\r\n                  </>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </Box>\r\n              {/* <ListItem>\r\n                  <Text as={'span'} fontWeight={'bold'}>\r\n                    Between lugs:\r\n                  </Text>{' '}\r\n                  20 mm\r\n                </ListItem>\r\n                \r\n                <ListItem>\r\n                  <Text as={'span'} fontWeight={'bold'}>\r\n                    Case:\r\n                  </Text>{' '}\r\n                  Steel\r\n                </ListItem>\r\n                <ListItem>\r\n                  <Text as={'span'} fontWeight={'bold'}>\r\n                    Case diameter:\r\n                  </Text>{' '}\r\n                  42 mm\r\n                </ListItem>\r\n                <ListItem>\r\n                  <Text as={'span'} fontWeight={'bold'}>\r\n                    Dial color:\r\n                  </Text>{' '}\r\n                  Black\r\n                </ListItem>\r\n                <ListItem>\r\n                  <Text as={'span'} fontWeight={'bold'}>\r\n                    Crystal:\r\n                  </Text>{' '}\r\n                  Domed, scratch‑resistant sapphire crystal with anti‑reflective\r\n                  treatment inside\r\n                </ListItem>\r\n                <ListItem>\r\n                  <Text as={'span'} fontWeight={'bold'}>\r\n                    Water resistance:\r\n                  </Text>{' '}\r\n                  5 bar (50 metres / 167 feet){' '}\r\n                </ListItem> */}\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      ) : (\r\n        <Skeleton height={650} width=\"100%\" />\r\n      )}\r\n      {data2 && data2 != [] ? (\r\n        <Box m={'auto'} gap={'30px'}>\r\n          <Heading>You might be interested in</Heading>\r\n          <Box\r\n            display={'flex'}\r\n            flexWrap={'wrap'}\r\n            gap={'30px'}\r\n            justifyContent={'space-evenly'}\r\n          >\r\n            {currentposts.map(e => {\r\n              console.log(e, 'data for all products');\r\n              let name = e.pro_name.replace(' ', '').replace(' ', '');\r\n              console.log(name, e.pro_name, 'name of single product');\r\n              return (\r\n                <SingleProductCard\r\n                  referLink={false}\r\n                  heading={e.pro_name ? e.pro_name : 'LoudSpeaker'}\r\n                  icon={`${Appstore.imageLink}/${e.pro_image}`}\r\n                  href={`/productDetails/${e.catid}/${e.showcaseid}/${name}/${catName}`}\r\n                />\r\n              );\r\n            })}\r\n          </Box>\r\n          {data2 && data2 != [] ? (\r\n            <Pagination\r\n              totalPosts={data2 && data2.length}\r\n              postsPerPage={postsPerPage}\r\n              setCurrentPage={setCpage}\r\n              currentPage={cpage}\r\n            />\r\n          ) : (\r\n            <Skeleton height={50} width=\"100%\" />\r\n          )}\r\n        </Box>\r\n      ) : (\r\n        <Skeleton height={450} width=\"100%\" />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\nexport default React.memo(MainProductDetails);\r\n"],"names":["Pagination","_ref","totalPosts","postsPerPage","setCurrentPage","currentPage","pages","i","Math","ceil","push","_jsx","Box","className","children","map","page","index","Button","onClick","React","SingleProductCard","heading","icon","description","href","_ref$referLink","referLink","_Fragment","target","_jsxs","maxW","borderRadius","h","w","overflow","Stack","align","p","background","rowGap","Image","loading","src","height","objectFit","alt","mt","Heading","fontSize","fontWeight","size","Link","to","whiteSpace","CategoriesProductCard","_ref2","Text","Appstore","device","AiOutlineArrowRight","AiOutlineArrowDown","MainProductDetails","timer","_useState","useState","_useState2","_slicedToArray","desc","setDesc","_useParams","useParams","id","catid","name","catName","url","concat","apilink","_useQuery","useQuery","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","axios","get","then","response","data","stop","refetch","isRefetching","useEffect","window","scrollTo","clearTimeout","setTimeout","timer2","url2","_useQuery2","_callee2","_context2","data2","refetch2","currentposts","_useState3","_useState4","cpage","setCpage","lastposti","firstposti","slice","color","useColorModeValue","_toConsumableArray","pro_desc","matchAll","match","array","console","log","as","flexDirection","m","pro_name","loadingText","isLoading","textAlign","display","gap","flexWrap","justifyContent","alignItems","border","pro_image","imageLink","base","lg","textTransform","mb","spacing","e","replace","Skeleton","width","showcaseid","length"],"sourceRoot":""}